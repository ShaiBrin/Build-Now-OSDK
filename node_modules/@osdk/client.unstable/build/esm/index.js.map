{"version":3,"sources":["../../src/generated/object-set-service/api/ObjectSetService/createTemporaryObjectSet.ts","../../src/generated/object-set-service/api/ObjectSetServiceV2/getBulkLinksPage.ts","../../src/generated/ontology-metadata/api/OntologyMetadataService/bulkLoadOntologyEntities.ts","../../src/generated/ontology-metadata/api/OntologyMetadataService/getLinkTypesForObjectTypes.ts","../../src/generated/ontology-metadata/api/OntologyMetadataService/loadAllOntologies.ts"],"names":["conjureFetch"],"mappings":";;;AAgCA,eAAsB,wBAAA,CAAyB,KAAK,OAAS,EAAA;AAC3D,EAAA,OAAOA,YAAa,CAAA,GAAA,EAAK,CAAyB,qBAAA,CAAA,EAAA,MAAA,EAAQ,OAAO,CAAA,CAAA;AACnE,CAAA;ACNA,eAAsB,gBAAA,CAAiB,KAAK,OAAS,EAAA;AACnD,EAAA,OAAOA,YAAa,CAAA,GAAA,EAAK,CAAe,WAAA,CAAA,EAAA,KAAA,EAAO,OAAO,CAAA,CAAA;AACxD,CAAA;ACJA,eAAsB,wBAAA,CAAyB,GAAK,EAAA,UAAA,EAAY,OAAS,EAAA;AACvE,EAAA,OAAOA,YAAa,CAAA,GAAA,EAAK,CAAuC,mCAAA,CAAA,EAAA,MAAA,EAAQ,OAAO,CAAA,CAAA;AACjF,CAAA;ACAA,eAAsB,0BAAA,CAA2B,KAAK,OAAS,EAAA;AAC7D,EAAA,OAAOA,YAAa,CAAA,GAAA,EAAK,CAAqC,iCAAA,CAAA,EAAA,MAAA,EAAQ,OAAO,CAAA,CAAA;AAC/E,CAAA;ACRA,eAAsB,iBAAA,CAAkB,KAAK,OAAS,EAAA;AACpD,EAAA,OAAOA,YAAa,CAAA,GAAA,EAAK,CAA0C,sCAAA,CAAA,EAAA,MAAA,EAAQ,OAAO,CAAA,CAAA;AACpF","file":"index.js","sourcesContent":["/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { conjureFetch } from \"conjure-lite\";\n/**\n * Creates a temporary object set that will live for at least as long as the provided TTL, and will get deleted\n * at some point after that.\n *\n * Temporary object sets can only be accessed by users who have created them; a gatekeeper resource is registered\n * for every temporary object set. NOTE: The same gatekeeper resource may be reused for the same userId across\n * different createTemporaryObjectSet requests.\n *\n * Whenever an object set (temporary, or otherwise) referencing a temporary object set gets saved or used in\n * versioned object sets, the reference gets replaced with a full definition of the previously saved temporary\n * object. This is to ensure that they do not inherit the TTL of temporary object sets they reference.\n *\n * Please consider using temporary object sets whenever there is a need to save an object set just to be able to\n * pass it to another service without a need to persist it indefinitely.\n */\nexport async function createTemporaryObjectSet(ctx, request) {\n  return conjureFetch(ctx, `/objectSets/temporary`, \"POST\", request);\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { conjureFetch } from \"conjure-lite\";\n/**\n * Returns a page of all `FoundryLink`s for a given relation based on a list of object identifiers.\n * The API supports fetching links for maximum 5_000 ObjectIdentifiers in a single request.\n * Results are always limited to the maximum of 100_000 links, without applying any particular order. Specifically,\n * this means that if total links count is above 100_000 then the whole result set should be considered partial,\n * i.e. there is no guarantee that for a given object all links have been retrieved.\n * Note that this endpoint does not check if objects referenced by the returned links actually exist. For instance,\n * when primary keys in the join table become stale, it will still return links based on the stale join table records.\n *\n * Note that this API does not support OSv1 links and will throw an exception if links provided are backed by OSv1.\n */\nexport async function getBulkLinksPage(ctx, request) {\n  return conjureFetch(ctx, `/bulk-links`, \"PUT\", request);\n}","/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { conjureFetch } from \"conjure-lite\";\n/**\n * Endpoint to load Ontology entities in bulk. The returned OntologyBulkLoadEntitiesResponse will only\n * contain entities that actually exist and are visible to the user. If the user has requested entities at\n * invalid versions or entities that do not exist in the specified versions, those will not be present\n * in the response.\n *\n * There are limits on the number of entities that can be loaded in one request. Please refer to\n * documentation of OntologyBulkLoadEntitiesRequest for the values of these limits.\n */\nexport async function bulkLoadOntologyEntities(ctx, onBehalfOf, request) {\n  return conjureFetch(ctx, `/ontology/ontology/bulkLoadEntities`, \"POST\", request);\n}","/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { conjureFetch } from \"conjure-lite\";\n/**\n * Endpoint to batch load links associated to given ObjectTypeRid(s). The GetLinkTypesForObjectTypesResponse\n * will only contain links that are visible to the user. If the user has requested to get link types at\n * invalid ontology versions or for ObjectTypeRid(s) that do not exist in the specified versions, those entries\n * will include an empty set of link types.\n *\n * The includeObjectTypesWithoutSearchableDatasources flag is respected if present in the request,\n * else we set it to a default (false) unless the user-agent is blocklisted.\n * The flag is set to true for blocklisted user agents. Currently the blocklist\n * includes functions-typescript-gradle-plugin only.\n */\nexport async function getLinkTypesForObjectTypes(ctx, request) {\n  return conjureFetch(ctx, `/ontology/linkTypesForObjectTypes`, \"POST\", request);\n}","/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { conjureFetch } from \"conjure-lite\";\n/**\n * Endpoint to load metadata about the Ontologies a user has access to. The response will contain\n * only Ontologies on which the user has `ontology:view-ontology`. Note that the returned\n * LoadAllOntologiesResponse may be empty if there is no Ontology yet.\n */\nexport async function loadAllOntologies(ctx, request) {\n  return conjureFetch(ctx, `/ontology/ontology/ontologies/load/all`, \"POST\", request);\n}"]}