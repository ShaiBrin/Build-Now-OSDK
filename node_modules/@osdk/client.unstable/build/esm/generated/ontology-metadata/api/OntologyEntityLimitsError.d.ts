import type { TooManyActionTypesError } from "./TooManyActionTypesError.js";
import type { TooManyInterfaceTypesError } from "./TooManyInterfaceTypesError.js";
import type { TooManyManyToManyLinkTypesError } from "./TooManyManyToManyLinkTypesError.js";
import type { TooManyObjectTypesError } from "./TooManyObjectTypesError.js";
import type { TooManyOneToManyLinkTypesError } from "./TooManyOneToManyLinkTypesError.js";
import type { TooManyRuleSetsError } from "./TooManyRuleSetsError.js";
import type { TooManySharedPropertyTypesError } from "./TooManySharedPropertyTypesError.js";
import type { TooManyTypeGroupsError } from "./TooManyTypeGroupsError.js";
import type { TooManyWorkflowsError } from "./TooManyWorkflowsError.js";
export interface OntologyEntityLimitsError_tooManyObjectTypes {
    type: "tooManyObjectTypes";
    tooManyObjectTypes: TooManyObjectTypesError;
}
export interface OntologyEntityLimitsError_tooManyManyToManyLinkTypes {
    type: "tooManyManyToManyLinkTypes";
    tooManyManyToManyLinkTypes: TooManyManyToManyLinkTypesError;
}
export interface OntologyEntityLimitsError_tooManyOneToManyLinkTypes {
    type: "tooManyOneToManyLinkTypes";
    tooManyOneToManyLinkTypes: TooManyOneToManyLinkTypesError;
}
export interface OntologyEntityLimitsError_tooManyRuleSets {
    type: "tooManyRuleSets";
    tooManyRuleSets: TooManyRuleSetsError;
}
export interface OntologyEntityLimitsError_tooManyWorkflows {
    type: "tooManyWorkflows";
    tooManyWorkflows: TooManyWorkflowsError;
}
export interface OntologyEntityLimitsError_tooManyActionTypes {
    type: "tooManyActionTypes";
    tooManyActionTypes: TooManyActionTypesError;
}
export interface OntologyEntityLimitsError_tooManySharedPropertyTypes {
    type: "tooManySharedPropertyTypes";
    tooManySharedPropertyTypes: TooManySharedPropertyTypesError;
}
export interface OntologyEntityLimitsError_tooManyInterfaceTypes {
    type: "tooManyInterfaceTypes";
    tooManyInterfaceTypes: TooManyInterfaceTypesError;
}
export interface OntologyEntityLimitsError_tooManyTypeGroups {
    type: "tooManyTypeGroups";
    tooManyTypeGroups: TooManyTypeGroupsError;
}
export type OntologyEntityLimitsError = OntologyEntityLimitsError_tooManyObjectTypes | OntologyEntityLimitsError_tooManyManyToManyLinkTypes | OntologyEntityLimitsError_tooManyOneToManyLinkTypes | OntologyEntityLimitsError_tooManyRuleSets | OntologyEntityLimitsError_tooManyWorkflows | OntologyEntityLimitsError_tooManyActionTypes | OntologyEntityLimitsError_tooManySharedPropertyTypes | OntologyEntityLimitsError_tooManyInterfaceTypes | OntologyEntityLimitsError_tooManyTypeGroups;
//# sourceMappingURL=OntologyEntityLimitsError.d.ts.map