import type { DataType } from "../DataType.js";
import type { TypeGroupRid } from "../TypeGroupRid.js";
import type { Visibility } from "../Visibility.js";
import type { FullTextStringPredicate } from "./FullTextStringPredicate.js";
import type { ObjectTypeExternalMappingFilter } from "./ObjectTypeExternalMappingFilter.js";
import type { ObjectTypeStatusFilter } from "./ObjectTypeStatusFilter.js";
import type { TypeClassPredicate } from "./TypeClassPredicate.js";
export interface ObjectTypeClause_and {
    type: "and";
    and: Array<ObjectTypeClause>;
}
export interface ObjectTypeClause_or {
    type: "or";
    or: Array<ObjectTypeClause>;
}
export interface ObjectTypeClause_propertyTypeTypeClasses {
    type: "propertyTypeTypeClasses";
    propertyTypeTypeClasses: TypeClassPredicate;
}
export interface ObjectTypeClause_propertyTypeType {
    type: "propertyTypeType";
    propertyTypeType: DataType;
}
export interface ObjectTypeClause_hasEventMetadata {
    type: "hasEventMetadata";
    hasEventMetadata: boolean;
}
export interface ObjectTypeClause_hasTimeSeriesMetadata {
    type: "hasTimeSeriesMetadata";
    hasTimeSeriesMetadata: boolean;
}
export interface ObjectTypeClause_propertyTypeId {
    type: "propertyTypeId";
    propertyTypeId: FullTextStringPredicate;
}
export interface ObjectTypeClause_propertyTypeDescription {
    type: "propertyTypeDescription";
    propertyTypeDescription: FullTextStringPredicate;
}
export interface ObjectTypeClause_propertyTypeDisplayName {
    type: "propertyTypeDisplayName";
    propertyTypeDisplayName: FullTextStringPredicate;
}
export interface ObjectTypeClause_propertyTypeAlias {
    type: "propertyTypeAlias";
    propertyTypeAlias: FullTextStringPredicate;
}
export interface ObjectTypeClause_objectTypeId {
    type: "objectTypeId";
    objectTypeId: FullTextStringPredicate;
}
export interface ObjectTypeClause_objectTypeDisplayName {
    type: "objectTypeDisplayName";
    objectTypeDisplayName: FullTextStringPredicate;
}
export interface ObjectTypeClause_objectTypeAlias {
    type: "objectTypeAlias";
    objectTypeAlias: FullTextStringPredicate;
}
export interface ObjectTypeClause_objectTypeDescription {
    type: "objectTypeDescription";
    objectTypeDescription: FullTextStringPredicate;
}
export interface ObjectTypeClause_visibility {
    type: "visibility";
    visibility: Visibility;
}
export interface ObjectTypeClause_status {
    type: "status";
    status: ObjectTypeStatusFilter;
}
export interface ObjectTypeClause_objectTypeExternalMapping {
    type: "objectTypeExternalMapping";
    objectTypeExternalMapping: ObjectTypeExternalMappingFilter;
}
export interface ObjectTypeClause_objectTypeTypeGroupRids {
    type: "objectTypeTypeGroupRids";
    objectTypeTypeGroupRids: Array<TypeGroupRid>;
}
/**
 * Data structure to represent search query for ObjectTypes. Supports filters for various ObjectType features.
 */
export type ObjectTypeClause = ObjectTypeClause_and | ObjectTypeClause_or | ObjectTypeClause_propertyTypeTypeClasses | ObjectTypeClause_propertyTypeType | ObjectTypeClause_hasEventMetadata | ObjectTypeClause_hasTimeSeriesMetadata | ObjectTypeClause_propertyTypeId | ObjectTypeClause_propertyTypeDescription | ObjectTypeClause_propertyTypeDisplayName | ObjectTypeClause_propertyTypeAlias | ObjectTypeClause_objectTypeId | ObjectTypeClause_objectTypeDisplayName | ObjectTypeClause_objectTypeAlias | ObjectTypeClause_objectTypeDescription | ObjectTypeClause_visibility | ObjectTypeClause_status | ObjectTypeClause_objectTypeExternalMapping | ObjectTypeClause_objectTypeTypeGroupRids;
//# sourceMappingURL=ObjectTypeClause.d.ts.map