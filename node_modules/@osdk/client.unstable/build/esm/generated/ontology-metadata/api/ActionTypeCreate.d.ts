import type { ActionApplyClientPreferences } from "./ActionApplyClientPreferences.js";
import type { ActionLogConfiguration } from "./ActionLogConfiguration.js";
import type { ActionLogic } from "./ActionLogic.js";
import type { ActionNotification } from "./ActionNotification.js";
import type { ActionNotificationSettings } from "./ActionNotificationSettings.js";
import type { ActionRevert } from "./ActionRevert.js";
import type { ActionTypeApiName } from "./ActionTypeApiName.js";
import type { ActionTypeDisplayMetadata } from "./ActionTypeDisplayMetadata.js";
import type { ActionTypeProvenanceModification } from "./ActionTypeProvenanceModification.js";
import type { ActionTypeStatus } from "./ActionTypeStatus.js";
import type { ActionWebhooks } from "./ActionWebhooks.js";
import type { FormContent } from "./FormContent.js";
import type { OntologyPackageRid } from "./OntologyPackageRid.js";
import type { ParameterId } from "./ParameterId.js";
import type { PutParameterRequest } from "./PutParameterRequest.js";
import type { PutSectionRequest } from "./PutSectionRequest.js";
import type { SectionId } from "./SectionId.js";
import type { ValidationRuleIdInRequest } from "./ValidationRuleIdInRequest.js";
import type { ValidationRuleModification } from "./ValidationRuleModification.js";
/**
 * A ActionTypeCreate is used to create ActionTypes.
 */
export interface ActionTypeCreate {
    apiName: ActionTypeApiName;
    displayMetadata: ActionTypeDisplayMetadata;
    parameters: Record<ParameterId, PutParameterRequest>;
    sections: Record<SectionId, PutSectionRequest>;
    parameterOrdering: Array<ParameterId>;
    formContentOrdering: Array<FormContent>;
    logic: ActionLogic;
    validations: Record<ValidationRuleIdInRequest, ValidationRuleModification>;
    validationsOrdering: Array<ValidationRuleIdInRequest>;
    webhooks: ActionWebhooks | undefined;
    notifications: Array<ActionNotification>;
    actionLogConfiguration: ActionLogConfiguration | undefined;
    status: ActionTypeStatus | undefined;
    actionApplyClientSettings: ActionApplyClientPreferences | undefined;
    notificationSettings: ActionNotificationSettings | undefined;
    revert: ActionRevert | undefined;
    packageRid: OntologyPackageRid | undefined;
    provenance: ActionTypeProvenanceModification | undefined;
}
//# sourceMappingURL=ActionTypeCreate.d.ts.map