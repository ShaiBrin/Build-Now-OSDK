import type { InterfaceTypeRidOrIdInRequest } from "../../api/InterfaceTypeRidOrIdInRequest.js";
import type { ObjectTypeId } from "../../api/ObjectTypeId.js";
import type { ObjectTypeRid } from "../../api/ObjectTypeRid.js";
import type { SharedPropertyTypeRidOrIdInRequest } from "../../api/SharedPropertyTypeRidOrIdInRequest.js";
import type { ValueTypeReference } from "../../api/ValueTypeReference.js";
export interface InvalidValueTypeError {
    objectRid: ObjectTypeRid;
    objectId: ObjectTypeId | undefined;
    interfaceTypeRidOrIdInRequest: InterfaceTypeRidOrIdInRequest;
    sharedPropertyTypeRidOrIdInRequest: SharedPropertyTypeRidOrIdInRequest;
    interfacePropertyValueType: ValueTypeReference | undefined;
    objectPropertyValueType: ValueTypeReference | undefined;
}
//# sourceMappingURL=InvalidValueTypeError.d.ts.map