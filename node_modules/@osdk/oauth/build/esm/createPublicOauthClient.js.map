{"version":3,"file":"createPublicOauthClient.js","names":["delay","authorizationCodeGrantRequest","calculatePKCECodeChallenge","customFetch","generateRandomCodeVerifier","generateRandomState","processAuthorizationCodeOAuth2Response","refreshTokenGrantRequest","validateAuthResponse","common","createAuthorizationServer","readLocal","removeLocal","saveLocal","throwIfError","createPublicOauthClient","client_id","url","redirectUrl","useHistory","loginPage","postLoginPage","window","location","toString","scopes","fetchFn","globalThis","fetch","ctxPath","client","token_endpoint_auth_method","authServer","oauthHttpOptions","length","makeTokenAndSaveRefresh","getToken","_signIn","maybeRefresh","maybeHandleAuthReturn","initiateLoginRedirect","bind","go","x","history","replaceState","assign","Error","expectRefreshToken","refresh_token","result","pathname","URL","oldUrl","e","process","env","NODE_ENV","console","warn","codeVerifier","state","ret","href","authorization_endpoint","URLSearchParams","response_type","redirect_uri","code_challenge","code_challenge_method","scope","join"],"sources":["createPublicOauthClient.js"],"sourcesContent":["/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport delay from \"delay\";\nimport { authorizationCodeGrantRequest, calculatePKCECodeChallenge, customFetch, generateRandomCodeVerifier, generateRandomState, processAuthorizationCodeOAuth2Response, refreshTokenGrantRequest, validateAuthResponse, } from \"oauth4webapi\";\nimport { common, createAuthorizationServer, readLocal, removeLocal, saveLocal, } from \"./common.js\";\nimport { throwIfError } from \"./throwIfError.js\";\n/**\n * @param client_id\n * @param url the base url of your foundry server\n * @param redirectUrl the url configured for redirect in the oauth configuration on the server\n * @param useHistory if true, when possible uses `history.replaceState()`, otherwise uses `window.location.assign()`\n * @param loginPage if you want a custom landing page prior to logging in, set this to that url\n * @param postLoginPage if you want to customize where you return to after a completed authentication cycle. defaults to the url when the page loaded\n * @param scopes\n * @param fetchFn\n * @param ctxPath\n * @returns {PublicOauthClient} which can be used as a token provider\n */\nexport function createPublicOauthClient(client_id, url, redirectUrl, useHistory = true, loginPage, postLoginPage = window.location.toString(), scopes = [], fetchFn = globalThis.fetch, ctxPath = \"/multipass\") {\n    const client = { client_id, token_endpoint_auth_method: \"none\" };\n    const authServer = createAuthorizationServer(ctxPath, url);\n    const oauthHttpOptions = { [customFetch]: fetchFn };\n    if (scopes.length === 0) {\n        scopes = [\"api:read-data\", \"api:write-data\"];\n    }\n    const { makeTokenAndSaveRefresh, getToken } = common(client, authServer, _signIn, oauthHttpOptions, maybeRefresh.bind(globalThis, true));\n    async function go(x) {\n        if (useHistory)\n            return window.history.replaceState({}, \"\", x);\n        else\n            window.location.assign(x);\n        await delay(1000);\n        throw new Error(\"Unable to redirect\");\n    }\n    async function maybeRefresh(expectRefreshToken) {\n        const { refresh_token } = readLocal(client);\n        if (!refresh_token) {\n            if (expectRefreshToken)\n                throw new Error(\"No refresh token found\");\n            return;\n        }\n        try {\n            // note, we don't use processRefreshTokenResponse because the mp oauth implementation\n            // doesn't do refresh tokens quite right and this lets us skip the id check\n            const result = makeTokenAndSaveRefresh(throwIfError(await processAuthorizationCodeOAuth2Response(authServer, client, await refreshTokenGrantRequest(authServer, client, refresh_token, oauthHttpOptions))), \"refresh\");\n            if (result && window.location.pathname === new URL(redirectUrl).pathname) {\n                const { oldUrl } = readLocal(client);\n                go(oldUrl ?? \"/\");\n            }\n            return result;\n        }\n        catch (e) {\n            if (process.env.NODE_ENV !== \"production\") {\n                // eslint-disable-next-line no-console\n                console.warn(\"Failed to get OAuth2 refresh token. Removing refresh token\", e);\n            }\n            removeLocal(client);\n            if (expectRefreshToken) {\n                throw new Error(\"Could not refresh token\");\n            }\n        }\n    }\n    async function maybeHandleAuthReturn() {\n        const { codeVerifier, state, oldUrl } = readLocal(client);\n        if (!codeVerifier)\n            return;\n        try {\n            const ret = makeTokenAndSaveRefresh(throwIfError(await processAuthorizationCodeOAuth2Response(authServer, client, await authorizationCodeGrantRequest(authServer, client, throwIfError(validateAuthResponse(authServer, client, new URL(window.location.href), state)), redirectUrl, codeVerifier, oauthHttpOptions))), \"signIn\");\n            go(oldUrl);\n            return ret;\n        }\n        catch (e) {\n            if (process.env.NODE_ENV !== \"production\") {\n                // eslint-disable-next-line no-console\n                console.warn(\"Failed to get OAuth2 token using PKCE, removing PKCE and starting a new auth flow\", e);\n            }\n            removeLocal(client);\n        }\n    }\n    async function initiateLoginRedirect() {\n        if (loginPage\n            && window.location.href !== loginPage\n            && window.location.pathname !== loginPage) {\n            saveLocal(client, { oldUrl: postLoginPage });\n            return await go(loginPage);\n        }\n        const state = generateRandomState();\n        const codeVerifier = generateRandomCodeVerifier();\n        const oldUrl = readLocal(client).oldUrl ?? window.location.toString();\n        saveLocal(client, { codeVerifier, state, oldUrl });\n        window.location.assign(`${authServer\n            .authorization_endpoint}?${new URLSearchParams({\n            client_id,\n            response_type: \"code\",\n            state,\n            redirect_uri: redirectUrl,\n            code_challenge: await calculatePKCECodeChallenge(codeVerifier),\n            code_challenge_method: \"S256\",\n            scope: [\"offline_access\", ...scopes].join(\" \"),\n        })}`);\n        // Give time for redirect to happen\n        await delay(1000);\n        throw new Error(\"Unable to redirect\");\n    }\n    /** Will throw if there is no token! */\n    async function _signIn() {\n        // 1. Check if we have a refresh token in local storage\n        return await maybeRefresh()\n            // 2. If there is no refresh token we are likely trying to perform the callback\n            ?? await maybeHandleAuthReturn()\n            // 3. If we haven't been able to load the token from one of the two above ways, we need to make the initial auth request\n            ?? await initiateLoginRedirect();\n    }\n    return getToken;\n}\n"],"mappings":"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","ignoreList":[]}