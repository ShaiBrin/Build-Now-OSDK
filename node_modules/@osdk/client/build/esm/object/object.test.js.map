{"version":3,"file":"object.test.js","names":["$Objects","$ontologyRid","Employee","apiServer","stubData","withoutRid","afterAll","beforeAll","describe","expect","it","createClient","asV2Object","o","includeRid","$apiName","__apiName","$objectType","$primaryKey","__primaryKey","$title","__title","client","listen","close","result","where","employeeId","employee1","fetchPage","employee","data","JSON","stringify","toBeDefined","toMatchObject","anything","startDate","Object","keys","$link","lead","fetchOne","$select","toBe","employee2","employeeStatus","toBeUndefined","employees","$and","peepsResult","peeps","toHaveLength","nextPageToken","office","peep","$includeRid","leadRid","$rid","objects","sort","toStrictEqual","shouldError","shouldError2","shouldCompile_client_fetchOne_old_select","shouldCompile_unstableClient_fetchOne_old_select","shouldCompile_client_fetchOne_new_select","shouldCompile_unstableClient_fetchOne_new_select","shouldCompile_client_fetchOne_old_noArgs","shouldCompile_unstableClient_fetchOne_noArgs"],"sources":["object.test.js"],"sourcesContent":["/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { $Objects, $ontologyRid, Employee } from \"@osdk/client.test.ontology\";\nimport { apiServer, stubData, withoutRid } from \"@osdk/shared.test\";\nimport { afterAll, beforeAll, describe, expect, it } from \"vitest\";\nimport { createClient } from \"../createClient.js\";\nfunction asV2Object(o, includeRid) {\n    o = includeRid ? { ...o } : withoutRid(o);\n    o.$apiName = o.__apiName;\n    o.$objectType = o.__apiName;\n    o.$primaryKey = o.__primaryKey;\n    o.$title = o.__title;\n    delete o.__apiName;\n    delete o.__primaryKey;\n    delete o.__title;\n    return o;\n}\ndescribe(\"OsdkObject\", () => {\n    describe(\"link\", () => {\n        let client;\n        beforeAll(async () => {\n            apiServer.listen();\n            client = createClient(\"https://stack.palantir.com\", $ontologyRid, async () => \"myAccessToken\");\n        });\n        afterAll(() => {\n            apiServer.close();\n        });\n        it(\"loads an employee\", async () => {\n            const result = await client(Employee).where({\n                employeeId: stubData.employee1.employeeId,\n            }).fetchPage();\n            // we should get the employee we requested\n            const employee = result.data[0];\n            expect(JSON.stringify(employee)).toBeDefined();\n            expect(employee).toMatchObject({\n                \"$apiName\": \"Employee\",\n                \"$objectType\": \"Employee\",\n                \"$primaryKey\": 50030,\n                \"class\": \"Red\",\n                \"employeeId\": 50030,\n                \"employeeStatus\": expect.anything(),\n                \"fullName\": \"John Doe\",\n                \"office\": \"NYC\",\n                \"startDate\": \"2019-01-01\",\n            });\n            employee.startDate;\n            // it should have the prototype that we assign at hydration time\n            expect(Object.keys(employee.$link.lead)).toBeDefined();\n        });\n        it(\"traverses the link from an employee to their lead\", async () => {\n            const result = await client(Employee).where({\n                employeeId: stubData.employee1.employeeId,\n            }).fetchPage();\n            const employee = result.data[0];\n            const lead = await employee.$link.lead.fetchOne({\n                $select: [\"employeeId\"],\n            });\n            expect(lead.employeeId).toBe(stubData.employee2.employeeId);\n            // ensure that the select was performed\n            expect(lead.employeeId).toBeDefined();\n            expect(lead.employeeStatus).toBeUndefined();\n        });\n        it(\"traverses the link from an lead to their peeps\", async () => {\n            // slightly weird request here to hit the existing mocks for employee2\n            const employees = await client(Employee).where({\n                $and: [\n                    { \"employeeId\": { \"$gt\": 50030 } },\n                    { \"employeeId\": { \"$lt\": 50032 } },\n                ],\n            }).fetchPage();\n            const lead = employees.data[0];\n            expect(lead).toBeDefined();\n            const peepsResult = await lead.$link.peeps.fetchPage({\n                $select: [\"fullName\", \"employeeId\"],\n            });\n            expect(peepsResult.data).toHaveLength(2);\n            expect(peepsResult.nextPageToken).toBeUndefined();\n            // ensure that the select was performed\n            expect(peepsResult.data[0].employeeId).toBeDefined();\n            expect(peepsResult.data[0].office).toBeUndefined();\n        });\n        it(\"traverses the link from an lead to their peep by primaryKey with fetchOne\", async () => {\n            // slightly weird request here to hit the existing mocks for employee2\n            const employees = await client(Employee).where({\n                $and: [\n                    { \"employeeId\": { \"$gt\": 50030 } },\n                    { \"employeeId\": { \"$lt\": 50032 } },\n                ],\n            }).fetchPage();\n            const lead = employees.data[0];\n            expect(lead).toBeDefined();\n            const peep = await lead.$link.peeps.fetchOne(stubData.employee1.employeeId, {\n                $select: [\"employeeId\"],\n            });\n            expect(peep).toBeDefined();\n            // ensure that select worked\n            expect(peep.employeeId).toBeDefined();\n            expect(peep.employeeStatus).toBeUndefined();\n        });\n        it(\"gives $rid access when requested\", async () => {\n            const result = await client(Employee).where({\n                employeeId: stubData.employee1.employeeId,\n            }).fetchPage({\n                $includeRid: true,\n            });\n            const leadRid = result.data[0].$rid;\n            expect(leadRid).toBeDefined();\n            expect(leadRid).toBe(\"ri.phonograph2-objects.main.object.88a6fccb-f333-46d6-a07e-7725c5f18b61\");\n        });\n        it(\"objects are enumerable in an sdk\", async () => {\n            const objects = Object.keys($Objects);\n            expect(objects.sort()).toStrictEqual([\n                \"Employee\",\n                \"ObjectWithTimestampPrimaryKey\",\n                \"Office\",\n                \"Person\",\n                \"Task\",\n                \"Todo\",\n                \"equipment\",\n                \"objectTypeWithAllPropertyTypes\",\n            ].sort());\n        });\n    });\n});\nexport async function shouldError(client) {\n    // @ts-expect-error\n    return client(Employee).fetchOne(1, {\n        $select: [\"employeeId\"],\n    });\n}\nexport async function shouldError2(client) {\n    // @ts-expect-error\n    return client(Employee).fetchOne(1, {\n        $select: [\"employeeId\"],\n    });\n}\nexport async function shouldCompile_client_fetchOne_old_select(client) {\n    return client(Employee).fetchOne(1, {\n        $select: [\"employeeId\"],\n    });\n}\nexport async function shouldCompile_unstableClient_fetchOne_old_select(client) {\n    return client(Employee).fetchOne(1, {\n        $select: [\"employeeId\"],\n    });\n}\nexport async function shouldCompile_client_fetchOne_new_select(client) {\n    return client(Employee).fetchOne(1, {\n        $select: [\"employeeId\"],\n    });\n}\nexport async function shouldCompile_unstableClient_fetchOne_new_select(client) {\n    return client(Employee).fetchOne(1, {\n        $select: [\"employeeId\"],\n    });\n}\nexport async function shouldCompile_client_fetchOne_old_noArgs(client) {\n    return client(Employee).fetchOne(1);\n}\nexport async function shouldCompile_unstableClient_fetchOne_noArgs(client) {\n    return client(Employee).fetchOne(1);\n}\n"],"mappings":"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","ignoreList":[]}