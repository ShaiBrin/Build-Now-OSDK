{"version":3,"file":"convertWireToOsdkObjects.test.js","names":["$ontologyRid","Employee","FooInterface","objectTypeWithAllPropertyTypes","createSharedClientContext","apiServer","afterAll","beforeAll","describe","expect","expectTypeOf","it","additionalContext","createClient","createMinimalClient","convertWireToOsdkObjects","client","listen","close","data","employee","fetchPage","Object","keys","sort","toEqual","$as","$link","employee2","where","$and","employeeId","$gt","$lt","JSON","stringify","toMatchInlineSnapshot","employees","length","toBeGreaterThanOrEqual","a","b","getPrototypeOf","toBe","withValues","id","attachment","attachmentArray","toMatchTypeOf","rid","Array","isArray","toBeTruthy","withoutValues","emptyAttachment","emptyAttachmentArray","toBeUndefined","clientCtx","ontologyRid","object","__apiName","apiName","__primaryKey","prototypeBefore","object2","undefined","prototypeAfter","not","obj","__title","fullName","objAsFoo","toMatchObject","fooSpt","$apiName","$primaryKey","$objectType","$title","console","log","$updateInternalValues","__rid","$rid","rejects","toThrowErrorMatchingInlineSnapshot","resolves","to","result","instance","osdk"],"sources":["convertWireToOsdkObjects.test.js"],"sourcesContent":["/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { $ontologyRid, Employee, FooInterface, objectTypeWithAllPropertyTypes, } from \"@osdk/client.test.ontology\";\nimport { createSharedClientContext } from \"@osdk/shared.client.impl\";\nimport { apiServer } from \"@osdk/shared.test\";\nimport { afterAll, beforeAll, describe, expect, expectTypeOf, it, } from \"vitest\";\nimport { additionalContext } from \"../Client.js\";\nimport { createClient } from \"../createClient.js\";\nimport { createMinimalClient } from \"../createMinimalClient.js\";\nimport { convertWireToOsdkObjects } from \"./convertWireToOsdkObjects.js\";\ndescribe(\"convertWireToOsdkObjects\", () => {\n    let client;\n    beforeAll(async () => {\n        apiServer.listen();\n        client = createClient(\"https://stack.palantir.com\", $ontologyRid, async () => \"myAccessToken\");\n    });\n    afterAll(() => {\n        apiServer.close();\n    });\n    it(\"configures properties correctly\", async () => {\n        const { data: [employee] } = await client(Employee).fetchPage();\n        expect(Object.keys(employee).sort()).toEqual([\n            \"employeeId\",\n            \"fullName\",\n            \"office\",\n            \"class\",\n            \"startDate\",\n            \"employeeStatus\",\n            \"$apiName\",\n            \"$objectType\",\n            \"$primaryKey\",\n        ].sort());\n        expect(Object.keys(employee.$as)).toEqual([]);\n        expect(Object.keys(employee.$link)).toEqual([\n            \"peeps\",\n            \"lead\",\n            \"officeLink\",\n        ]);\n    });\n    it(\"stringifies properties on objects and interfaces correctly\", async () => {\n        const { data: [employee] } = await client(Employee).fetchPage();\n        const { data: [employee2] } = await client(Employee).where({\n            $and: [{ employeeId: { $gt: 50030 } }, { employeeId: { $lt: 50032 } }],\n        }).fetchPage();\n        // Should not have $title\n        expect(JSON.stringify(employee)).toMatchInlineSnapshot(`\"{\"employeeId\":50030,\"fullName\":\"John Doe\",\"office\":\"NYC\",\"class\":\"Red\",\"startDate\":\"2019-01-01\",\"employeeStatus\":{},\"$apiName\":\"Employee\",\"$objectType\":\"Employee\",\"$primaryKey\":50030}\"`);\n        expect(JSON.stringify(employee.$as(FooInterface))).toMatchInlineSnapshot(`\"{\"$apiName\":\"FooInterface\",\"$objectType\":\"Employee\",\"$primaryKey\":50030,\"fooSpt\":\"John Doe\"}\"`);\n        // Should have $title\n        expect(JSON.stringify(employee2)).toMatchInlineSnapshot(`\"{\"employeeId\":50031,\"fullName\":\"Jane Doe\",\"office\":\"SEA\",\"class\":\"Blue\",\"startDate\":\"2012-02-12\",\"employeeStatus\":{},\"$apiName\":\"Employee\",\"$objectType\":\"Employee\",\"$primaryKey\":50031,\"$title\":\"Jane Doe\"}\"`);\n        expect(JSON.stringify(employee2.$as(FooInterface))).toMatchInlineSnapshot(`\"{\"$apiName\":\"FooInterface\",\"$objectType\":\"Employee\",\"$primaryKey\":50031,\"$title\":\"Jane Doe\",\"fooSpt\":\"Jane Doe\"}\"`);\n    });\n    it(\"reuses the object prototype across objects\", async () => {\n        const employees = await client(Employee).fetchPage();\n        expect(employees.data.length).toBeGreaterThanOrEqual(2);\n        const [a, b] = employees.data;\n        expect(Object.getPrototypeOf(Object.getPrototypeOf(a))).toBe(Object.getPrototypeOf(Object.getPrototypeOf(b)));\n    });\n    it(\"converts attachments as expected\", async () => {\n        const withValues = await client(objectTypeWithAllPropertyTypes)\n            .where({ id: 1 })\n            .fetchPage();\n        expect(withValues.data.length).toBeGreaterThanOrEqual(1);\n        const { attachment, attachmentArray } = withValues.data[0];\n        expectTypeOf(attachment).toMatchTypeOf;\n        expect(attachment?.rid).toEqual(\"ri.attachments.main.attachment.86016861-707f-4292-b258-6a7108915a75\");\n        expect(Array.isArray(attachmentArray)).toBeTruthy();\n        expectTypeOf(attachmentArray[0]).toMatchTypeOf;\n        const withoutValues = await client(objectTypeWithAllPropertyTypes).where({ id: 2 }).fetchPage();\n        const { attachment: emptyAttachment, attachmentArray: emptyAttachmentArray, } = withoutValues.data[0];\n        expect(emptyAttachment).toBeUndefined();\n        expect(emptyAttachmentArray).toBeUndefined();\n    });\n    it(\"works even with unknown apiNames\", async () => {\n        const clientCtx = createMinimalClient({ ontologyRid: $ontologyRid }, \"https://stack.palantir.com\", async () => \"myAccessToken\");\n        createSharedClientContext(\"https://stack.palantir.com\", async () => \"myAccessToken\", \"userAgent\");\n        let object = {\n            __apiName: Employee.apiName,\n            __primaryKey: 0,\n        };\n        const prototypeBefore = Object.getPrototypeOf(object);\n        let object2 = await convertWireToOsdkObjects(clientCtx, [object], undefined, undefined, undefined, false);\n        const prototypeAfter = Object.getPrototypeOf(object2);\n        expect(prototypeBefore).not.toBe(prototypeAfter);\n    });\n    it(\"updates interface when underlying changes\", async () => {\n        const clientCtx = createMinimalClient({ ontologyRid: $ontologyRid }, \"https://stack.palantir.com\", async () => \"myAccessToken\");\n        let objectFromWire = {\n            __apiName: \"Employee\",\n            __primaryKey: 0,\n            __title: \"Steve\",\n            fullName: \"Steve\",\n            employeeId: \"5\",\n        };\n        const [obj] = (await convertWireToOsdkObjects(clientCtx, [objectFromWire], undefined));\n        expect(obj.fullName).toEqual(\"Steve\");\n        expect(Object.keys(obj).sort()).toEqual([\n            \"$apiName\",\n            \"$objectType\",\n            \"$primaryKey\",\n            \"$title\",\n            \"employeeId\",\n            \"fullName\",\n        ].sort());\n        const objAsFoo = obj.$as(FooInterface);\n        expect(objAsFoo).toMatchObject({\n            fooSpt: obj.fullName,\n            $apiName: FooInterface.apiName,\n            $primaryKey: obj.$primaryKey,\n            $objectType: obj.$objectType,\n            $title: obj.$title,\n        });\n        console.log(obj);\n        console.log(objAsFoo);\n        obj.$updateInternalValues({\n            fullName: \"Bob\",\n        });\n        expect(obj.fullName).toEqual(\"Bob\");\n        expect(objAsFoo.fooSpt).toEqual(obj.fullName);\n        expect(Object.keys(objAsFoo).sort()).toEqual([\n            \"$apiName\",\n            \"$objectType\",\n            \"$primaryKey\",\n            \"$title\",\n            \"fooSpt\",\n        ].sort());\n        expect(obj).toBe(objAsFoo.$as(Employee));\n        expect(objAsFoo).toBe(obj.$as(FooInterface));\n    });\n    it(\"reconstitutes interfaces properly without rid\", async () => {\n        const clientCtx = createMinimalClient({ ontologyRid: $ontologyRid }, \"https://stack.palantir.com\", async () => \"myAccessToken\");\n        let objectFromWire = {\n            __apiName: \"Employee\",\n            __primaryKey: 0,\n            __title: \"Steve\",\n            fooSpt: \"Steve\",\n        };\n        const [objAsFoo] = (await convertWireToOsdkObjects(clientCtx, [objectFromWire], FooInterface.apiName));\n        expect(objAsFoo).toMatchInlineSnapshot(`\n      {\n        \"$apiName\": \"FooInterface\",\n        \"$objectType\": \"Employee\",\n        \"$primaryKey\": 0,\n        \"$title\": \"Steve\",\n        \"fooSpt\": \"Steve\",\n      }\n    `);\n        const obj = objAsFoo.$as(Employee);\n        expect(obj.fullName).toEqual(\"Steve\");\n        expect(obj).toMatchInlineSnapshot(`\n      {\n        \"$apiName\": \"Employee\",\n        \"$objectType\": \"Employee\",\n        \"$primaryKey\": 0,\n        \"$title\": \"Steve\",\n        \"employeeId\": 0,\n        \"fullName\": \"Steve\",\n      }\n    `);\n    });\n    it(\"reconstitutes interfaces properly with rid\", async () => {\n        const clientCtx = createMinimalClient({ ontologyRid: $ontologyRid }, \"https://stack.palantir.com\", async () => \"myAccessToken\");\n        let objectFromWire = {\n            __apiName: \"Employee\",\n            __primaryKey: 0,\n            __title: \"Steve\",\n            __rid: \"hiMom\",\n            fooSpt: \"Steve\",\n        };\n        const [objAsFoo] = (await convertWireToOsdkObjects(clientCtx, [objectFromWire], FooInterface.apiName));\n        expect(objAsFoo).toMatchInlineSnapshot(`\n      {\n        \"$apiName\": \"FooInterface\",\n        \"$objectType\": \"Employee\",\n        \"$primaryKey\": 0,\n        \"$rid\": \"hiMom\",\n        \"$title\": \"Steve\",\n        \"fooSpt\": \"Steve\",\n      }\n    `);\n        expect(objAsFoo.$rid).toEqual(\"hiMom\");\n        const obj = objAsFoo.$as(Employee);\n        expect(obj.fullName).toEqual(\"Steve\");\n        expect(obj).toMatchInlineSnapshot(`\n      {\n        \"$apiName\": \"Employee\",\n        \"$objectType\": \"Employee\",\n        \"$primaryKey\": 0,\n        \"$rid\": \"hiMom\",\n        \"$title\": \"Steve\",\n        \"employeeId\": 0,\n        \"fullName\": \"Steve\",\n      }\n    `);\n        expect(obj.$rid).toEqual(\"hiMom\");\n    });\n    describe(\"selection keys\", () => {\n        it(\"throws when required is missing\", async () => {\n            let object = {\n                __apiName: \"Employee\",\n                __primaryKey: 0,\n            };\n            await expect(() => convertWireToOsdkObjects(client[additionalContext], [object], undefined, undefined, [\"employeeId\"], \"throw\")).rejects.toThrowErrorMatchingInlineSnapshot(`[Error: Unable to safely convert objects as some non nullable properties are null]`);\n        });\n        it(\"does not throw when optional is missing\", async () => {\n            let object = {\n                __apiName: \"Employee\",\n                __primaryKey: 0,\n            };\n            await expect(convertWireToOsdkObjects(client[additionalContext], [object], undefined, undefined, [\"fullName\"], \"throw\")).resolves.to.not.toBeUndefined();\n        });\n        it(\"filters when it should\", async () => {\n            const object = {\n                __apiName: \"Employee\",\n                __primaryKey: 0,\n            };\n            const result = await convertWireToOsdkObjects(client[additionalContext], [object], undefined, undefined, [\"employeeId\"], \"drop\");\n            expect(result.length).toBe(0);\n        });\n        it(\"does not filter when it shouldn't\", async () => {\n            const object = {\n                __apiName: \"Employee\",\n                __primaryKey: 0,\n            };\n            const result = await convertWireToOsdkObjects(client[additionalContext], [object], undefined, undefined, [\"fullName\"], \"drop\");\n            expect(result.length).toBe(1);\n        });\n    });\n    describe(\"without selection keys\", () => {\n        it(\"throws when required is missing\", async () => {\n            let object = {\n                __apiName: \"Employee\",\n                __primaryKey: 0,\n            };\n            await expect(() => convertWireToOsdkObjects(client[additionalContext], [object], undefined, undefined, undefined, \"throw\")).rejects.toThrowErrorMatchingInlineSnapshot(`[Error: Unable to safely convert objects as some non nullable properties are null]`);\n        });\n        it(\"does not throw when required is present\", async () => {\n            let object = {\n                __apiName: \"Employee\",\n                __primaryKey: 0,\n                \"employeeId\": 0,\n            };\n            await expect(convertWireToOsdkObjects(client[additionalContext], [object], undefined, undefined, undefined, \"throw\")).resolves.to.not.toBeUndefined();\n        });\n        it(\"filters when it should\", async () => {\n            const object = {\n                __apiName: \"Employee\",\n                __primaryKey: 0,\n            };\n            const result = await convertWireToOsdkObjects(client[additionalContext], [object], undefined, undefined, undefined, \"drop\");\n            expect(result.length).toBe(0);\n        });\n        it(\"does not filter when it shouldn't\", async () => {\n            const object = {\n                __apiName: \"Employee\",\n                __primaryKey: 0,\n                \"employeeId\": 0,\n            };\n            const result = await convertWireToOsdkObjects(client[additionalContext], [object], undefined, undefined, undefined, \"drop\");\n            expect(result.length).toBe(1);\n        });\n    });\n    it(\"behaves correctly when converting\", async () => {\n        const object = {\n            __apiName: \"Employee\",\n            __primaryKey: 0,\n            fooSpt: \"hi\",\n        };\n        const result = await convertWireToOsdkObjects(client[additionalContext], [object], \"FooInterface\", undefined, [\"fooSpt\"], \"drop\");\n        expect(result.length).toBe(1);\n    });\n});\ndescribe(\"Osdk.Instance\", () => {\n    it(\"is assignable to Osdk<>\", () => {\n        const instance = {};\n        const osdk = instance;\n    });\n    it(\"is assignable from Osdk<>\", () => {\n        const osdk = {};\n        const instance = osdk;\n    });\n    it(\"is assignable to Osdk<> with $notStrict\", () => {\n        const instance = {};\n        const osdk = instance;\n        const osdk2 = instance;\n    });\n    it(\"is assignable from Osdk<> with $notStrict\", () => {\n        const osdk = {};\n        const osdk2 = osdk;\n        const instance = osdk;\n        const instance2 = osdk2;\n    });\n    it(\"object with any for props is assignable to its normal self\", () => {\n        const foo = {};\n        const bar = foo;\n    });\n});\n"],"mappings":"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","ignoreList":[]}