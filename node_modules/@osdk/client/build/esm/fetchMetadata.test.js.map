{"version":3,"file":"fetchMetadata.test.js","names":["$Actions","$Interfaces","$Objects","$ontologyRid","$Queries","apiServer","afterAll","beforeAll","describe","expect","expectTypeOf","it","createClient","client","listen","close","objectMetadata","fetchMetadata","Employee","toEqualTypeOf","toMatchInlineSnapshot","interfaceMetadata","FooInterface","actionMetadata","moveOffice","queryMetadata","queryAcceptsObject"],"sources":["fetchMetadata.test.js"],"sourcesContent":["/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { $Actions, $Interfaces, $Objects, $ontologyRid, $Queries, } from \"@osdk/client.test.ontology\";\nimport { apiServer } from \"@osdk/shared.test\";\nimport { afterAll, beforeAll, describe, expect, expectTypeOf, it, } from \"vitest\";\nimport { createClient } from \"./createClient.js\";\ndescribe(\"FetchMetadata\", () => {\n    let client;\n    beforeAll(async () => {\n        apiServer.listen();\n        client = createClient(\"https://stack.palantir.com\", $ontologyRid, async () => \"myAccessToken\");\n    });\n    afterAll(() => {\n        apiServer.close();\n    });\n    it(\"fetches object metadata correctly\", async () => {\n        const objectMetadata = await client.fetchMetadata($Objects.Employee);\n        expectTypeOf(objectMetadata).toEqualTypeOf();\n        expect(objectMetadata).toMatchInlineSnapshot(`\n      {\n        \"apiName\": \"Employee\",\n        \"description\": \"A full-time or part-time \n\n       employee of our firm\",\n        \"displayName\": \"Employee\",\n        \"icon\": {\n          \"color\": \"blue\",\n          \"name\": \"person\",\n          \"type\": \"blueprint\",\n        },\n        \"implements\": [\n          \"FooInterface\",\n        ],\n        \"interfaceMap\": {\n          \"FooInterface\": {\n            \"fooSpt\": \"fullName\",\n          },\n        },\n        \"inverseInterfaceMap\": {\n          \"FooInterface\": {\n            \"fullName\": \"fooSpt\",\n          },\n        },\n        \"links\": {\n          \"lead\": {\n            \"multiplicity\": false,\n            \"targetType\": \"Employee\",\n          },\n          \"officeLink\": {\n            \"multiplicity\": false,\n            \"targetType\": \"Office\",\n          },\n          \"peeps\": {\n            \"multiplicity\": true,\n            \"targetType\": \"Employee\",\n          },\n        },\n        \"pluralDisplayName\": \"Employees\",\n        \"primaryKeyApiName\": \"employeeId\",\n        \"primaryKeyType\": \"integer\",\n        \"properties\": {\n          \"employeeId\": {\n            \"description\": undefined,\n            \"displayName\": undefined,\n            \"multiplicity\": false,\n            \"nullable\": false,\n            \"type\": \"integer\",\n          },\n          \"employeeStatus\": {\n            \"description\": \"TimeSeries of the status of the employee\",\n            \"displayName\": undefined,\n            \"multiplicity\": false,\n            \"nullable\": true,\n            \"type\": \"stringTimeseries\",\n          },\n          \"fullName\": {\n            \"description\": undefined,\n            \"displayName\": undefined,\n            \"multiplicity\": false,\n            \"nullable\": true,\n            \"type\": \"string\",\n          },\n          \"office\": {\n            \"description\": \"The unique \"ID\" of the employee's \\\\\"primary\\\\\" assigned office.\n       This is some more text.\",\n            \"displayName\": undefined,\n            \"multiplicity\": false,\n            \"nullable\": true,\n            \"type\": \"string\",\n          },\n          \"startDate\": {\n            \"description\": \"The date the employee was hired (most recently, if they were re-hired)\",\n            \"displayName\": undefined,\n            \"multiplicity\": false,\n            \"nullable\": true,\n            \"type\": \"datetime\",\n          },\n        },\n        \"rid\": \"ri.ontology.main.object-type.401ac022-89eb-4591-8b7e-0a912b9efb44\",\n        \"status\": \"ACTIVE\",\n        \"titleProperty\": \"fullName\",\n        \"type\": \"object\",\n        \"visibility\": \"NORMAL\",\n      }\n    `);\n    });\n    it(\"fetches interface metadata correctly\", async () => {\n        const interfaceMetadata = await client.fetchMetadata($Interfaces.FooInterface);\n        expectTypeOf(interfaceMetadata).toEqualTypeOf();\n        expect(interfaceMetadata).toMatchInlineSnapshot(`\n      {\n        \"apiName\": \"FooInterface\",\n        \"description\": \"Interface for Foo\",\n        \"displayName\": \"Foo Interface\",\n        \"implements\": [],\n        \"links\": {},\n        \"properties\": {\n          \"fooSpt\": {\n            \"description\": \"A foo\",\n            \"displayName\": \"Foo\",\n            \"multiplicity\": false,\n            \"nullable\": true,\n            \"type\": \"string\",\n          },\n        },\n        \"rid\": \"ri.interface.main.interface.1\",\n        \"type\": \"interface\",\n      }\n    `);\n    });\n    it(\"fetches action metadata correctly\", async () => {\n        const actionMetadata = await client.fetchMetadata($Actions.moveOffice);\n        expectTypeOf(actionMetadata).toEqualTypeOf();\n        expect(actionMetadata).toMatchInlineSnapshot(`\n      {\n        \"apiName\": \"moveOffice\",\n        \"description\": \"Update an office's physical location\",\n        \"displayName\": \"move-office\",\n        \"modifiedEntities\": {\n          \"Office\": {\n            \"created\": false,\n            \"modified\": true,\n          },\n        },\n        \"parameters\": {\n          \"newAddress\": {\n            \"description\": \"The office's new physical address (not necessarily shipping address)\",\n            \"multiplicity\": false,\n            \"nullable\": true,\n            \"type\": \"string\",\n          },\n          \"newCapacity\": {\n            \"description\": \"The maximum seated-at-desk capacity of the new office (maximum fire-safe capacity may be higher)\",\n            \"multiplicity\": false,\n            \"nullable\": true,\n            \"type\": \"integer\",\n          },\n          \"officeId\": {\n            \"description\": undefined,\n            \"multiplicity\": false,\n            \"nullable\": false,\n            \"type\": \"string\",\n          },\n          \"officeNames\": {\n            \"description\": \"A list of all office names\",\n            \"multiplicity\": true,\n            \"nullable\": true,\n            \"type\": \"integer\",\n          },\n        },\n        \"rid\": \"ri.ontology.main.action-type.9f84017d-cf17-4fa8-84c3-8e01e5d594f2\",\n        \"status\": \"ACTIVE\",\n        \"type\": \"action\",\n      }\n    `);\n    });\n    it(\"fetches query metadata correctly\", async () => {\n        const queryMetadata = await client.fetchMetadata($Queries.queryAcceptsObject);\n        expectTypeOf(queryMetadata).toEqualTypeOf();\n        expect(queryMetadata).toMatchInlineSnapshot(`\n      {\n        \"apiName\": \"queryAcceptsObject\",\n        \"description\": \"description of the query that takes object types\",\n        \"displayName\": \"QueryAcceptsObject\",\n        \"output\": {\n          \"nullable\": false,\n          \"object\": \"Employee\",\n          \"type\": \"object\",\n        },\n        \"parameters\": {\n          \"object\": {\n            \"description\": undefined,\n            \"nullable\": false,\n            \"object\": \"Employee\",\n            \"type\": \"object\",\n          },\n        },\n        \"rid\": \"ri.function-registry.main.function.9b55870a-63c7-4d48-8f06-9627c0805968\",\n        \"type\": \"query\",\n        \"version\": \"0.11.0\",\n      }\n    `);\n    });\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAQ,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,QAAQ,QAAS,4BAA4B;AACrG,SAASC,SAAS,QAAQ,mBAAmB;AAC7C,SAASC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,YAAY,EAAEC,EAAE,QAAS,QAAQ;AACjF,SAASC,YAAY,QAAQ,mBAAmB;AAChDJ,QAAQ,CAAC,eAAe,EAAE,MAAM;EAC5B,IAAIK,MAAM;EACVN,SAAS,CAAC,YAAY;IAClBF,SAAS,CAACS,MAAM,CAAC,CAAC;IAClBD,MAAM,GAAGD,YAAY,CAAC,4BAA4B,EAAET,YAAY,EAAE,YAAY,eAAe,CAAC;EAClG,CAAC,CAAC;EACFG,QAAQ,CAAC,MAAM;IACXD,SAAS,CAACU,KAAK,CAAC,CAAC;EACrB,CAAC,CAAC;EACFJ,EAAE,CAAC,mCAAmC,EAAE,YAAY;IAChD,MAAMK,cAAc,GAAG,MAAMH,MAAM,CAACI,aAAa,CAACf,QAAQ,CAACgB,QAAQ,CAAC;IACpER,YAAY,CAACM,cAAc,CAAC,CAACG,aAAa,CAAC,CAAC;IAC5CV,MAAM,CAACO,cAAc,CAAC,CAACI,qBAAqB,CAAC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,CAAC;EACF,CAAC,CAAC;EACFT,EAAE,CAAC,sCAAsC,EAAE,YAAY;IACnD,MAAMU,iBAAiB,GAAG,MAAMR,MAAM,CAACI,aAAa,CAAChB,WAAW,CAACqB,YAAY,CAAC;IAC9EZ,YAAY,CAACW,iBAAiB,CAAC,CAACF,aAAa,CAAC,CAAC;IAC/CV,MAAM,CAACY,iBAAiB,CAAC,CAACD,qBAAqB,CAAC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,CAAC;EACF,CAAC,CAAC;EACFT,EAAE,CAAC,mCAAmC,EAAE,YAAY;IAChD,MAAMY,cAAc,GAAG,MAAMV,MAAM,CAACI,aAAa,CAACjB,QAAQ,CAACwB,UAAU,CAAC;IACtEd,YAAY,CAACa,cAAc,CAAC,CAACJ,aAAa,CAAC,CAAC;IAC5CV,MAAM,CAACc,cAAc,CAAC,CAACH,qBAAqB,CAAC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,CAAC;EACF,CAAC,CAAC;EACFT,EAAE,CAAC,kCAAkC,EAAE,YAAY;IAC/C,MAAMc,aAAa,GAAG,MAAMZ,MAAM,CAACI,aAAa,CAACb,QAAQ,CAACsB,kBAAkB,CAAC;IAC7EhB,YAAY,CAACe,aAAa,CAAC,CAACN,aAAa,CAAC,CAAC;IAC3CV,MAAM,CAACgB,aAAa,CAAC,CAACL,qBAAqB,CAAC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,CAAC;EACF,CAAC,CAAC;AACN,CAAC,CAAC","ignoreList":[]}