{"version":3,"file":"createClient.test.js","names":["Task","mockFetchResponse","MockOntology","beforeEach","describe","expect","it","vi","createClient","USER_AGENT","fetchFunction","client","fn","metadata","ontologyRid","undefined","data","getUserAgentPartsFromMockedFetch","userAgent","mock","calls","headers","get","parts","split","fetchPage","toHaveBeenCalledTimes","toEqual","osdkMetadata","extraUserAgent"],"sources":["createClient.test.js"],"sourcesContent":["/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Task } from \"@osdk/client.test.ontology\";\nimport { mockFetchResponse, MockOntology } from \"@osdk/shared.test\";\nimport { beforeEach, describe, expect, it, vi } from \"vitest\";\nimport { createClient } from \"./createClient.js\";\nimport { USER_AGENT } from \"./util/UserAgent.js\";\ndescribe(createClient, () => {\n    const validOlderVersion = \"0.13.0\";\n    const validCurrentVersion = \"0.14.0\";\n    const invalidFutureVersion = \"100.100.100\";\n    let fetchFunction;\n    let client;\n    beforeEach(() => {\n        fetchFunction = vi.fn();\n        client = createClient(\"https://mock.com\", MockOntology.metadata.ontologyRid, async () => \"Token\", undefined, fetchFunction);\n        mockFetchResponse(fetchFunction, { data: [] });\n    });\n    describe(\"user agent passing\", () => {\n        function getUserAgentPartsFromMockedFetch() {\n            const userAgent = (fetchFunction.mock.calls[0][1]?.headers)\n                .get(\"Fetch-User-Agent\");\n            const parts = userAgent?.split(\" \") ?? [];\n            return parts;\n        }\n        it(\"works for objects\", async () => {\n            await client(Task).fetchPage();\n            expect(fetchFunction).toHaveBeenCalledTimes(1);\n            const parts = getUserAgentPartsFromMockedFetch();\n            expect(parts).toEqual([\n                ...Task.osdkMetadata\n                    .extraUserAgent\n                    .split(\" \"),\n                USER_AGENT,\n            ]);\n        });\n    });\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,IAAI,QAAQ,4BAA4B;AACjD,SAASC,iBAAiB,EAAEC,YAAY,QAAQ,mBAAmB;AACnE,SAASC,UAAU,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,EAAE,EAAEC,EAAE,QAAQ,QAAQ;AAC7D,SAASC,YAAY,QAAQ,mBAAmB;AAChD,SAASC,UAAU,QAAQ,qBAAqB;AAChDL,QAAQ,CAACI,YAAY,EAAE,MAAM;EAIzB,IAAIE,aAAa;EACjB,IAAIC,MAAM;EACVR,UAAU,CAAC,MAAM;IACbO,aAAa,GAAGH,EAAE,CAACK,EAAE,CAAC,CAAC;IACvBD,MAAM,GAAGH,YAAY,CAAC,kBAAkB,EAAEN,YAAY,CAACW,QAAQ,CAACC,WAAW,EAAE,YAAY,OAAO,EAAEC,SAAS,EAAEL,aAAa,CAAC;IAC3HT,iBAAiB,CAACS,aAAa,EAAE;MAAEM,IAAI,EAAE;IAAG,CAAC,CAAC;EAClD,CAAC,CAAC;EACFZ,QAAQ,CAAC,oBAAoB,EAAE,MAAM;IACjC,SAASa,gCAAgCA,CAAA,EAAG;MACxC,MAAMC,SAAS,GAAG,CAACR,aAAa,CAACS,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEC,OAAO,EACrDC,GAAG,CAAC,kBAAkB,CAAC;MAC5B,MAAMC,KAAK,GAAGL,SAAS,EAAEM,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE;MACzC,OAAOD,KAAK;IAChB;IACAjB,EAAE,CAAC,mBAAmB,EAAE,YAAY;MAChC,MAAMK,MAAM,CAACX,IAAI,CAAC,CAACyB,SAAS,CAAC,CAAC;MAC9BpB,MAAM,CAACK,aAAa,CAAC,CAACgB,qBAAqB,CAAC,CAAC,CAAC;MAC9C,MAAMH,KAAK,GAAGN,gCAAgC,CAAC,CAAC;MAChDZ,MAAM,CAACkB,KAAK,CAAC,CAACI,OAAO,CAAC,CAClB,GAAG3B,IAAI,CAAC4B,YAAY,CACfC,cAAc,CACdL,KAAK,CAAC,GAAG,CAAC,EACff,UAAU,CACb,CAAC;IACN,CAAC,CAAC;EACN,CAAC,CAAC;AACN,CAAC,CAAC","ignoreList":[]}