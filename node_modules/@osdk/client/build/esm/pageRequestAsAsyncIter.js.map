{"version":3,"file":"pageRequestAsAsyncIter.js","names":["getResults","x","results","applyPageToken","payload","pageToken","undefined","pageRequestAsAsyncIter","call","values","nextArgs","initialPayload","r","q"],"sources":["pageRequestAsAsyncIter.js"],"sourcesContent":["/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function getResults(x) {\n    return x.results;\n}\nexport function applyPageToken(payload, { pageToken }) {\n    return pageToken\n        ? {\n            ...payload,\n            pageToken,\n        }\n        : undefined;\n}\nexport async function* pageRequestAsAsyncIter(call, values, nextArgs, initialPayload) {\n    let payload = initialPayload;\n    while (payload) {\n        const r = await call(payload);\n        for (const q of values(r)) {\n            yield q;\n        }\n        payload = nextArgs(payload, r);\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,UAAUA,CAACC,CAAC,EAAE;EAC1B,OAAOA,CAAC,CAACC,OAAO;AACpB;AACA,OAAO,SAASC,cAAcA,CAACC,OAAO,EAAE;EAAEC;AAAU,CAAC,EAAE;EACnD,OAAOA,SAAS,GACV;IACE,GAAGD,OAAO;IACVC;EACJ,CAAC,GACCC,SAAS;AACnB;AACA,OAAO,gBAAgBC,sBAAsBA,CAACC,IAAI,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,cAAc,EAAE;EAClF,IAAIP,OAAO,GAAGO,cAAc;EAC5B,OAAOP,OAAO,EAAE;IACZ,MAAMQ,CAAC,GAAG,MAAMJ,IAAI,CAACJ,OAAO,CAAC;IAC7B,KAAK,MAAMS,CAAC,IAAIJ,MAAM,CAACG,CAAC,CAAC,EAAE;MACvB,MAAMC,CAAC;IACX;IACAT,OAAO,GAAGM,QAAQ,CAACN,OAAO,EAAEQ,CAAC,CAAC;EAClC;AACJ","ignoreList":[]}