{"version":3,"file":"toConjureObjectSet.js","names":["conjureUnionType","toConjureObjectSet","objectSet","objectPropertyMapping","type","objectTypeId","id","objectRids","objects","provenance","undefined","objectSetRid","reference","runtimeDerivedProperties","filter","mapWhereClauseToObjectSetFilter","where","objectSets","map","os","Error","getObjectSetBaseType","objectType","objectSetFilter","propertyMapping","propertyId","propertyApiNameToIdMapping","field","lt","value","lte","gt","gte","terms","filters","hasProperty"],"sources":["toConjureObjectSet.js"],"sourcesContent":["/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { conjureUnionType } from \"./conjureUnionType.js\";\n/** @internal */\nexport function toConjureObjectSet(objectSet, objectPropertyMapping) {\n    switch (objectSet.type) {\n        case \"base\":\n            return conjureUnionType(\"base\", {\n                objectTypeId: objectPropertyMapping.id,\n            });\n        case \"static\":\n            return conjureUnionType(\"static\", {\n                objectRids: objectSet.objects,\n                provenance: undefined,\n            });\n        case \"reference\":\n            return conjureUnionType(\"referenced\", {\n                objectSetRid: objectSet.reference,\n            });\n        case \"filter\":\n            return conjureUnionType(\"filtered\", {\n                objectSet: toConjureObjectSet(objectSet.objectSet, objectPropertyMapping),\n                runtimeDerivedProperties: undefined,\n                filter: mapWhereClauseToObjectSetFilter(objectSet.where, objectPropertyMapping),\n            });\n        case \"union\":\n            return conjureUnionType(\"unioned\", {\n                objectSets: objectSet.objectSets.map(os => toConjureObjectSet(os, objectPropertyMapping)),\n            });\n        case \"intersect\":\n            return conjureUnionType(\"intersected\", {\n                objectSets: objectSet.objectSets.map(os => toConjureObjectSet(os, objectPropertyMapping)),\n            });\n        case \"subtract\":\n            return conjureUnionType(\"subtracted\", {\n                objectSets: objectSet.objectSets.map(os => toConjureObjectSet(os, objectPropertyMapping)),\n            });\n        case \"searchAround\":\n        case \"asBaseObjectTypes\":\n        case \"asType\":\n        case \"interfaceBase\":\n        default:\n            throw new Error(\"not implemented\");\n    }\n}\n/** @internal */\nexport async function getObjectSetBaseType(objectSet) {\n    switch (objectSet.type) {\n        case \"base\":\n            return objectSet.objectType;\n        case \"static\":\n            // TODO: Get the object type from a wire call\n            // This is not supported at the moment by the API anyway\n            throw new Error(\"not implemented\");\n        case \"reference\":\n            // TODO: Get the object type from a wire call\n            throw new Error(\"not implemented\");\n        case \"filter\":\n            return getObjectSetBaseType(objectSet.objectSet);\n        case \"union\":\n            // Technically you can have multiple ObjectTypes but at the moment we only support one\n            return getObjectSetBaseType(objectSet.objectSets[0]);\n        case \"intersect\":\n            return getObjectSetBaseType(objectSet.objectSets[0]);\n        case \"subtract\":\n            return getObjectSetBaseType(objectSet.objectSets[0]);\n        case \"asBaseObjectTypes\":\n        case \"asType\":\n        case \"interfaceBase\":\n        case \"searchAround\":\n        default:\n            // TODO: Get a mapping using the link\n            throw new Error(\"not implemented\");\n    }\n}\nfunction mapWhereClauseToObjectSetFilter(objectSetFilter, propertyMapping) {\n    switch (objectSetFilter.type) {\n        case \"lt\":\n            return conjureUnionType(\"range\", {\n                propertyId: propertyMapping.propertyApiNameToIdMapping[objectSetFilter.field],\n                lt: objectSetFilter.value,\n                lte: undefined,\n                gt: undefined,\n                gte: undefined,\n            });\n        case \"gt\":\n            return conjureUnionType(\"range\", {\n                propertyId: propertyMapping.propertyApiNameToIdMapping[objectSetFilter.field],\n                gt: objectSetFilter.value,\n                lte: undefined,\n                lt: undefined,\n                gte: undefined,\n            });\n        case \"lte\":\n            return conjureUnionType(\"range\", {\n                propertyId: propertyMapping.propertyApiNameToIdMapping[objectSetFilter.field],\n                lte: objectSetFilter.value,\n                lt: undefined,\n                gt: undefined,\n                gte: undefined,\n            });\n        case \"gte\":\n            return conjureUnionType(\"range\", {\n                propertyId: propertyMapping.propertyApiNameToIdMapping[objectSetFilter.field],\n                gte: objectSetFilter.value,\n                lt: undefined,\n                lte: undefined,\n                gt: undefined,\n            });\n        case \"eq\":\n            return conjureUnionType(\"exactMatch\", {\n                propertyId: propertyMapping.propertyApiNameToIdMapping[objectSetFilter.field],\n                terms: [objectSetFilter.value],\n            });\n        case \"and\":\n            return conjureUnionType(\"and\", {\n                filters: objectSetFilter.value.map(filter => mapWhereClauseToObjectSetFilter(filter, propertyMapping)),\n            });\n        case \"or\":\n            return conjureUnionType(\"or\", {\n                filters: objectSetFilter.value.map(filter => mapWhereClauseToObjectSetFilter(filter, propertyMapping)),\n            });\n        case \"isNull\":\n            return conjureUnionType(\"not\", {\n                filter: {\n                    type: \"hasProperty\",\n                    hasProperty: {\n                        propertyId: propertyMapping\n                            .propertyApiNameToIdMapping[objectSetFilter.field],\n                    },\n                },\n            });\n        case \"not\":\n            return conjureUnionType(\"not\", {\n                filter: mapWhereClauseToObjectSetFilter(objectSetFilter.value, propertyMapping),\n            });\n        case \"contains\":\n        case \"startsWith\":\n        case \"containsAllTermsInOrder\":\n        case \"containsAnyTerm\":\n        case \"containsAllTerms\":\n        case \"withinDistanceOf\":\n        case \"withinBoundingBox\":\n        case \"intersectsBoundingBox\":\n        case \"doesNotIntersectBoundingBox\":\n        case \"withinPolygon\":\n        case \"intersectsPolygon\":\n        case \"doesNotIntersectPolygon\":\n        case \"containsAllTermsInOrderPrefixLastTerm\":\n        case \"in\":\n            throw new Error(\"not implemented\");\n    }\n}\n"],"mappings":"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","ignoreList":[]}