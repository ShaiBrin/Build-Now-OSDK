{"version":3,"file":"toDataValue.js","names":["OntologiesV2","isAttachmentUpload","getWireObjectSet","isObjectSet","isOntologyObjectV2","isOsdkBaseObject","isWireObjectSet","toDataValue","value","client","Array","isArray","Set","promiseArray","from","innerValue","Promise","all","attachment","Attachments","upload","filename","name","rid","__primaryKey","$primaryKey","Object","entries","reduce","promisedAcc","key","structValue","acc","resolve"],"sources":["toDataValue.js"],"sourcesContent":["/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as OntologiesV2 from \"@osdk/internal.foundry.ontologiesv2\";\nimport { isAttachmentUpload } from \"../object/AttachmentUpload.js\";\nimport { getWireObjectSet, isObjectSet } from \"../objectSet/createObjectSet.js\";\nimport { isOntologyObjectV2 } from \"./isOntologyObjectV2.js\";\nimport { isOsdkBaseObject } from \"./isOsdkObject.js\";\nimport { isWireObjectSet } from \"./WireObjectSet.js\";\n/**\n * Marshall user-facing data into the wire DataValue type\n *\n * @see DataValue for the expected payloads\n * @internal\n */\nexport async function toDataValue(value, client) {\n    if (value == null) {\n        // typeof null is 'object' so do this first\n        return value;\n    }\n    // arrays and sets are both sent over the wire as arrays\n    if (Array.isArray(value) || value instanceof Set) {\n        const promiseArray = Array.from(value, async (innerValue) => await toDataValue(innerValue, client));\n        return Promise.all(promiseArray);\n    }\n    // For uploads, we need to upload ourselves first to get the RID of the attachment\n    if (isAttachmentUpload(value)) {\n        const attachment = await OntologiesV2.Attachments.upload(client, value, {\n            filename: value.name,\n        });\n        return await toDataValue(attachment.rid, client);\n    }\n    // objects just send the JSON'd primaryKey\n    if (isOntologyObjectV2(value)) {\n        return await toDataValue(value.__primaryKey, client);\n    }\n    if (isOsdkBaseObject(value)) {\n        return await toDataValue(value.$primaryKey, client);\n    }\n    // object set (the rid as a string (passes through the last return), or the ObjectSet definition directly)\n    if (isWireObjectSet(value)) {\n        return value;\n    }\n    if (isObjectSet(value)) {\n        return getWireObjectSet(value);\n    }\n    // TODO (during queries implementation)\n    // two dimensional aggregation\n    // three dimensional aggregation\n    // struct\n    if (typeof value === \"object\") {\n        return Object.entries(value).reduce(async (promisedAcc, [key, structValue]) => {\n            const acc = await promisedAcc;\n            acc[key] = await toDataValue(structValue, client);\n            return acc;\n        }, Promise.resolve({}));\n    }\n    // expected to pass through - boolean, byte, date, decimal, float, double, integer, long, short, string, timestamp\n    return value;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKA,YAAY,MAAM,qCAAqC;AACnE,SAASC,kBAAkB,QAAQ,+BAA+B;AAClE,SAASC,gBAAgB,EAAEC,WAAW,QAAQ,iCAAiC;AAC/E,SAASC,kBAAkB,QAAQ,yBAAyB;AAC5D,SAASC,gBAAgB,QAAQ,mBAAmB;AACpD,SAASC,eAAe,QAAQ,oBAAoB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,eAAeC,WAAWA,CAACC,KAAK,EAAEC,MAAM,EAAE;EAC7C,IAAID,KAAK,IAAI,IAAI,EAAE;IACf;IACA,OAAOA,KAAK;EAChB;EACA;EACA,IAAIE,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC,IAAIA,KAAK,YAAYI,GAAG,EAAE;IAC9C,MAAMC,YAAY,GAAGH,KAAK,CAACI,IAAI,CAACN,KAAK,EAAE,MAAOO,UAAU,IAAK,MAAMR,WAAW,CAACQ,UAAU,EAAEN,MAAM,CAAC,CAAC;IACnG,OAAOO,OAAO,CAACC,GAAG,CAACJ,YAAY,CAAC;EACpC;EACA;EACA,IAAIZ,kBAAkB,CAACO,KAAK,CAAC,EAAE;IAC3B,MAAMU,UAAU,GAAG,MAAMlB,YAAY,CAACmB,WAAW,CAACC,MAAM,CAACX,MAAM,EAAED,KAAK,EAAE;MACpEa,QAAQ,EAAEb,KAAK,CAACc;IACpB,CAAC,CAAC;IACF,OAAO,MAAMf,WAAW,CAACW,UAAU,CAACK,GAAG,EAAEd,MAAM,CAAC;EACpD;EACA;EACA,IAAIL,kBAAkB,CAACI,KAAK,CAAC,EAAE;IAC3B,OAAO,MAAMD,WAAW,CAACC,KAAK,CAACgB,YAAY,EAAEf,MAAM,CAAC;EACxD;EACA,IAAIJ,gBAAgB,CAACG,KAAK,CAAC,EAAE;IACzB,OAAO,MAAMD,WAAW,CAACC,KAAK,CAACiB,WAAW,EAAEhB,MAAM,CAAC;EACvD;EACA;EACA,IAAIH,eAAe,CAACE,KAAK,CAAC,EAAE;IACxB,OAAOA,KAAK;EAChB;EACA,IAAIL,WAAW,CAACK,KAAK,CAAC,EAAE;IACpB,OAAON,gBAAgB,CAACM,KAAK,CAAC;EAClC;EACA;EACA;EACA;EACA;EACA,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC3B,OAAOkB,MAAM,CAACC,OAAO,CAACnB,KAAK,CAAC,CAACoB,MAAM,CAAC,OAAOC,WAAW,EAAE,CAACC,GAAG,EAAEC,WAAW,CAAC,KAAK;MAC3E,MAAMC,GAAG,GAAG,MAAMH,WAAW;MAC7BG,GAAG,CAACF,GAAG,CAAC,GAAG,MAAMvB,WAAW,CAACwB,WAAW,EAAEtB,MAAM,CAAC;MACjD,OAAOuB,GAAG;IACd,CAAC,EAAEhB,OAAO,CAACiB,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3B;EACA;EACA,OAAOzB,KAAK;AAChB","ignoreList":[]}