{"version":3,"file":"toDataValue.test.js","names":["$ontologyRid","Employee","Task","apiServer","MockOntology","stubData","afterAll","beforeAll","describe","expect","it","vi","createClient","createMinimalClient","createAttachmentUpload","getWireObjectSet","toDataValue","client","clientCtx","fn","listen","metadata","close","basic","null","undefined","boolean","date","integer","string","timestamp","convertedBasic","toEqual","attachment","attachmentArray","attachmentSet","Set","recursiveConversion","inner","employee","employee1","ontologyConversion","__primaryKey","task","fetchOne","$primaryKey","clientObjectSet","where","id","definition","expected","objectSetConversion","toMatchInlineSnapshot","definitionConversion","blob","attachmentUploadRequestBody","localAttachment1","filename","attachmentUpload","converted"],"sources":["toDataValue.test.js"],"sourcesContent":["/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { $ontologyRid, Employee, Task } from \"@osdk/client.test.ontology\";\nimport { apiServer, MockOntology, stubData } from \"@osdk/shared.test\";\nimport { afterAll, beforeAll, describe, expect, it, vi } from \"vitest\";\nimport { createClient } from \"../createClient.js\";\nimport { createMinimalClient } from \"../createMinimalClient.js\";\nimport { createAttachmentUpload } from \"../object/AttachmentUpload.js\";\nimport { getWireObjectSet } from \"../objectSet/createObjectSet.js\";\nimport { toDataValue } from \"./toDataValue.js\";\ndescribe(toDataValue, () => {\n    let client;\n    let clientCtx;\n    const mockFetch = vi.fn();\n    beforeAll(async () => {\n        apiServer.listen();\n        client = createClient(\"https://stack.palantir.com\", $ontologyRid, async () => \"myAccessToken\");\n        clientCtx = createMinimalClient(MockOntology.metadata, \"https://stack.palantir.com\", async () => \"myAccessToken\", {});\n    });\n    afterAll(() => {\n        apiServer.close();\n    });\n    it(\"converts passthrough values correctly\", async () => {\n        // basic pass through types\n        const basic = {\n            null: undefined,\n            boolean: false,\n            date: \"2024-01-01\",\n            integer: 0,\n            string: \"string\",\n            timestamp: \"2024-01-01T00:00:00Z\",\n        };\n        const convertedBasic = await toDataValue(basic, clientCtx);\n        expect(convertedBasic).toEqual(basic);\n    });\n    it(\"recursively converts arrays and sets into array types\", async () => {\n        const attachment = \"rid\";\n        const attachmentArray = [attachment];\n        const attachmentSet = new Set(attachmentArray);\n        const recursiveConversion = await toDataValue({\n            attachment,\n            attachmentArray,\n            attachmentSet,\n        }, clientCtx);\n        expect(recursiveConversion).toEqual({\n            attachment: \"rid\",\n            attachmentArray: [\"rid\"],\n            attachmentSet: [\"rid\"],\n        });\n    });\n    it(\"recursively handles structs\", async () => {\n        const struct = {\n            inner: {\n                attachment: \"rid\",\n            },\n        };\n        const recursiveConversion = await toDataValue(struct, clientCtx);\n        expect(recursiveConversion).toEqual({\n            inner: { attachment: \"rid\" },\n        });\n    });\n    it(\"maps an ontology object into just its primary key\", async () => {\n        const employee = stubData.employee1;\n        const ontologyConversion = await toDataValue(employee, clientCtx);\n        expect(ontologyConversion).toEqual(stubData.employee1.__primaryKey);\n    });\n    it(\"maps an ontology object into just its primary key with osdk wrapper\", async () => {\n        const task = await client(Employee).fetchOne(50030);\n        const ontologyConversion = await toDataValue(task, clientCtx);\n        expect(ontologyConversion).toEqual(task.$primaryKey);\n    });\n    it(\"passes through object set definitions\", async () => {\n        const clientObjectSet = client(Task).where({ id: 0 });\n        const definition = getWireObjectSet(clientObjectSet);\n        const expected = `\n    {\n      \"objectSet\": {\n        \"objectType\": \"Task\",\n        \"type\": \"base\",\n      },\n      \"type\": \"filter\",\n      \"where\": {\n        \"field\": \"id\",\n        \"type\": \"eq\",\n        \"value\": 0,\n      },\n    }\n  `;\n        const objectSetConversion = await toDataValue(clientObjectSet, clientCtx);\n        expect(objectSetConversion).toMatchInlineSnapshot(expected);\n        const definitionConversion = await toDataValue(definition, clientCtx);\n        expect(definitionConversion).toMatchInlineSnapshot(expected);\n    });\n    it(\"converts attachment uploads correctly\", async () => {\n        const blob = stubData.attachmentUploadRequestBody[stubData.localAttachment1.filename];\n        const attachmentUpload = createAttachmentUpload(blob, \"file1.txt\");\n        const converted = await toDataValue(attachmentUpload, clientCtx);\n        expect(converted).toEqual(\"ri.attachments.main.attachment.86016861-707f-4292-b258-6a7108915a75\");\n    });\n});\n"],"mappings":"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","ignoreList":[]}