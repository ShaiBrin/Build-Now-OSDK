{"version":3,"file":"createOsdkInterface.test.js","names":["describe","expect","it","InterfaceDefinitions","createOsdkInterface","ObjectDefRef","iface","apiName","displayName","interfaceMap","inverseInterfaceMap","links","pluralDisplayName","primaryKeyApiName","primaryKeyType","properties","type","titleProperty","rid","status","implements","Object","keys","toMatchInlineSnapshot","asdf","toBe","JSON","stringify","undefined"],"sources":["createOsdkInterface.test.js"],"sourcesContent":["/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { describe, expect, it } from \"vitest\";\nimport { InterfaceDefinitions, } from \"../../ontology/OntologyProvider.js\";\nimport { createOsdkInterface } from \"./createOsdkInterface.js\";\nimport { ObjectDefRef } from \"./InternalSymbols.js\";\ndescribe(createOsdkInterface, () => {\n    it(\"works in the normal case\", () => {\n        const underlying = {\n            \"foo\": \"hi mom\",\n            [ObjectDefRef]: {\n                [InterfaceDefinitions]: {},\n                apiName: \"Obj\",\n                displayName: \"\",\n                interfaceMap: {\n                    \"IFoo\": {\n                        \"asdf\": \"foo\",\n                    },\n                },\n                inverseInterfaceMap: {},\n                links: {},\n                pluralDisplayName: \"\",\n                primaryKeyApiName: \"\",\n                primaryKeyType: \"string\",\n                properties: {\n                    \"foo\": {\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n                titleProperty: \"foo\",\n                rid: \"\",\n                status: \"ACTIVE\",\n            },\n        };\n        // underlying: Osdk<Q> & ObjectHolder<Q>,\n        // interfaceDef: InterfaceMetadata,\n        const iface = createOsdkInterface(underlying, {\n            \"apiName\": \"IFoo\",\n            displayName: \"\",\n            links: {},\n            properties: {\n                \"asdf\": {\n                    type: \"string\",\n                },\n            },\n            rid: \"\",\n            type: \"interface\",\n            implements: [],\n        });\n        expect(Object.keys(iface)).toMatchInlineSnapshot(`\n      [\n        \"$apiName\",\n        \"asdf\",\n      ]\n    `);\n        expect(iface.asdf).toBe(\"hi mom\");\n        expect(JSON.stringify(iface, undefined, 2)).toMatchInlineSnapshot(`\n      \"{\n        \"$apiName\": \"IFoo\",\n        \"asdf\": \"hi mom\"\n      }\"\n    `);\n    });\n    it(\"properly maps apiNamespace\", () => {\n        const underlying = {\n            \"foo\": \"hi mom\",\n            [ObjectDefRef]: {\n                [InterfaceDefinitions]: {},\n                apiName: \"Obj\",\n                displayName: \"\",\n                interfaceMap: {\n                    \"a.IFoo\": {\n                        \"a.asdf\": \"foo\",\n                    },\n                },\n                inverseInterfaceMap: {},\n                links: {},\n                pluralDisplayName: \"\",\n                primaryKeyApiName: \"\",\n                primaryKeyType: \"string\",\n                properties: {\n                    \"foo\": {\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n                titleProperty: \"foo\",\n                rid: \"\",\n                status: \"ACTIVE\",\n            },\n        };\n        // underlying: Osdk<Q> & ObjectHolder<Q>,\n        // interfaceDef: InterfaceMetadata,\n        const iface = createOsdkInterface(underlying, {\n            \"apiName\": \"a.IFoo\",\n            displayName: \"\",\n            links: {},\n            properties: {\n                \"a.asdf\": {\n                    type: \"string\",\n                },\n            },\n            rid: \"\",\n            type: \"interface\",\n            implements: [],\n        });\n        expect(Object.keys(iface)).toMatchInlineSnapshot(`\n      [\n        \"$apiName\",\n        \"asdf\",\n      ]\n    `);\n        expect(iface.asdf).toBe(\"hi mom\");\n        expect(JSON.stringify(iface, undefined, 2)).toMatchInlineSnapshot(`\n      \"{\n        \"$apiName\": \"a.IFoo\",\n        \"asdf\": \"hi mom\"\n      }\"\n    `);\n    });\n    it(\"works with mixed namespaces\", () => {\n        const underlying = {\n            \"foo\": \"hi mom\",\n            [ObjectDefRef]: {\n                [InterfaceDefinitions]: {},\n                apiName: \"Obj\",\n                displayName: \"\",\n                interfaceMap: {\n                    \"a.IFoo\": {\n                        \"b.asdf\": \"foo\",\n                    },\n                },\n                inverseInterfaceMap: {},\n                links: {},\n                pluralDisplayName: \"\",\n                primaryKeyApiName: \"\",\n                primaryKeyType: \"string\",\n                properties: {\n                    \"foo\": {\n                        type: \"string\",\n                    },\n                },\n                type: \"object\",\n                titleProperty: \"foo\",\n                rid: \"\",\n                status: \"ACTIVE\",\n            },\n        };\n        // underlying: Osdk<Q> & ObjectHolder<Q>,\n        // interfaceDef: InterfaceMetadata,\n        const iface = createOsdkInterface(underlying, {\n            \"apiName\": \"a.IFoo\",\n            displayName: \"\",\n            links: {},\n            properties: {\n                \"b.asdf\": {\n                    type: \"string\",\n                },\n            },\n            rid: \"\",\n            type: \"interface\",\n            implements: [],\n        });\n        expect(Object.keys(iface)).toMatchInlineSnapshot(`\n      [\n        \"$apiName\",\n        \"b.asdf\",\n      ]\n    `);\n        expect(iface[\"b.asdf\"]).toBe(\"hi mom\");\n        expect(JSON.stringify(iface, undefined, 2)).toMatchInlineSnapshot(`\n      \"{\n        \"$apiName\": \"a.IFoo\",\n        \"b.asdf\": \"hi mom\"\n      }\"\n    `);\n    });\n});\n"],"mappings":"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","ignoreList":[]}