{"version":3,"file":"OsdkCustomInspectPrototype.js","names":["InterfaceDefRef","ObjectDefRef","UnderlyingOsdkObject","OsdkCustomInspectPrototype","Object","create","Symbol","for","value","customInspect","_depth","options","localInspect","newOptions","depth","ret","stylize","apiName","k","Set","Reflect","ownKeys","toString","replace"],"sources":["OsdkCustomInspectPrototype.js"],"sourcesContent":["/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { InterfaceDefRef, ObjectDefRef, UnderlyingOsdkObject, } from \"./InternalSymbols.js\";\nexport const OsdkCustomInspectPrototype = Object.create(null, {\n    [Symbol.for(\"nodejs.util.inspect.custom\")]: { value: customInspect },\n});\n/**\n * A custom `util.inspect`/`console.log` for nodejs. Not emitted in the browser version\n * @param this\n * @param _depth\n * @param options\n * @param inspect\n * @returns\n */\nfunction customInspect(_depth, options, localInspect) {\n    const newOptions = {\n        ...options,\n        depth: options.depth == null ? null : options.depth - 1,\n    };\n    let ret = `Osdk<${options.stylize(this[ObjectDefRef]?.apiName ?? this[InterfaceDefRef]?.apiName ?? \"\", \"special\")}> {\\n`;\n    for (const k of new Set([\n        \"$apiName\",\n        \"$objectType\",\n        \"$primaryKey\",\n        ...Reflect.ownKeys(this),\n    ])) {\n        if (typeof k === \"symbol\")\n            continue;\n        ret += `  ${options.stylize(k.toString(), \"undefined\")}: ${localInspect(this[k], newOptions)}\\n`;\n    }\n    if (this[UnderlyingOsdkObject] !== this) {\n        ret += \"\\n\";\n        ret += `  ${options.stylize(\"$as\", \"special\")}: ${localInspect(this[UnderlyingOsdkObject], newOptions).replace(/\\n/g, `\\n  `)}`;\n        ret += \"\\n\";\n    }\n    ret += \"}\";\n    return ret;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,eAAe,EAAEC,YAAY,EAAEC,oBAAoB,QAAS,sBAAsB;AAC3F,OAAO,MAAMC,0BAA0B,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,EAAE;EAC1D,CAACC,MAAM,CAACC,GAAG,CAAC,4BAA4B,CAAC,GAAG;IAAEC,KAAK,EAAEC;EAAc;AACvE,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,aAAaA,CAACC,MAAM,EAAEC,OAAO,EAAEC,YAAY,EAAE;EAClD,MAAMC,UAAU,GAAG;IACf,GAAGF,OAAO;IACVG,KAAK,EAAEH,OAAO,CAACG,KAAK,IAAI,IAAI,GAAG,IAAI,GAAGH,OAAO,CAACG,KAAK,GAAG;EAC1D,CAAC;EACD,IAAIC,GAAG,GAAG,QAAQJ,OAAO,CAACK,OAAO,CAAC,IAAI,CAACf,YAAY,CAAC,EAAEgB,OAAO,IAAI,IAAI,CAACjB,eAAe,CAAC,EAAEiB,OAAO,IAAI,EAAE,EAAE,SAAS,CAAC,OAAO;EACxH,KAAK,MAAMC,CAAC,IAAI,IAAIC,GAAG,CAAC,CACpB,UAAU,EACV,aAAa,EACb,aAAa,EACb,GAAGC,OAAO,CAACC,OAAO,CAAC,IAAI,CAAC,CAC3B,CAAC,EAAE;IACA,IAAI,OAAOH,CAAC,KAAK,QAAQ,EACrB;IACJH,GAAG,IAAI,KAAKJ,OAAO,CAACK,OAAO,CAACE,CAAC,CAACI,QAAQ,CAAC,CAAC,EAAE,WAAW,CAAC,KAAKV,YAAY,CAAC,IAAI,CAACM,CAAC,CAAC,EAAEL,UAAU,CAAC,IAAI;EACpG;EACA,IAAI,IAAI,CAACX,oBAAoB,CAAC,KAAK,IAAI,EAAE;IACrCa,GAAG,IAAI,IAAI;IACXA,GAAG,IAAI,KAAKJ,OAAO,CAACK,OAAO,CAAC,KAAK,EAAE,SAAS,CAAC,KAAKJ,YAAY,CAAC,IAAI,CAACV,oBAAoB,CAAC,EAAEW,UAAU,CAAC,CAACU,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,EAAE;IAC/HR,GAAG,IAAI,IAAI;EACf;EACAA,GAAG,IAAI,GAAG;EACV,OAAOA,GAAG;AACd","ignoreList":[]}