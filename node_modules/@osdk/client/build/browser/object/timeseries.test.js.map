{"version":3,"file":"timeseries.test.js","names":["$ontologyRid","Employee","apiServer","afterAll","beforeAll","describe","expect","it","createClient","client","listen","close","employee","fetchOne","$primaryKey","toEqual","point","employeeStatus","getFirstPoint","time","value","getLastPoint","points","getAllPoints","$before","$unit","toBeDefined","$after","$startTime","$endTime","pointsIter","asyncIterPoints","push"],"sources":["timeseries.test.js"],"sourcesContent":["/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { $ontologyRid, Employee } from \"@osdk/client.test.ontology\";\nimport { apiServer } from \"@osdk/shared.test\";\nimport { afterAll, beforeAll, describe, expect, it } from \"vitest\";\nimport { createClient } from \"../createClient.js\";\ndescribe(\"Timeseries\", () => {\n    let client;\n    beforeAll(async () => {\n        apiServer.listen();\n        client = createClient(\"https://stack.palantir.com\", $ontologyRid, async () => \"myAccessToken\");\n    });\n    afterAll(() => {\n        apiServer.close();\n    });\n    it(\"get first points works\", async () => {\n        const employee = await client(Employee).fetchOne(50030);\n        expect(employee.$primaryKey).toEqual(50030);\n        const point = await employee.employeeStatus?.getFirstPoint();\n        expect(point?.time).toEqual(\"2012-02-12\");\n        expect(point?.value).toEqual(10);\n    });\n    it(\"get last points works\", async () => {\n        const employee = await client(Employee).fetchOne(50030);\n        expect(employee.$primaryKey).toEqual(50030);\n        const point = await employee.employeeStatus?.getLastPoint();\n        expect(point?.time).toEqual(\"2014-04-14\");\n        expect(point?.value).toEqual(30);\n    });\n    it(\"getAll points with before works\", async () => {\n        const employee = await client(Employee).fetchOne(50030);\n        expect(employee.$primaryKey).toEqual(50030);\n        const points = await employee.employeeStatus?.getAllPoints({\n            $before: 1,\n            $unit: \"month\",\n        });\n        expect(points).toBeDefined();\n        expect(points).toEqual([{ time: \"2012-02-12\", value: 10 }, {\n                time: \"2013-03-13\",\n                value: 20,\n            }, { time: \"2014-04-14\", value: 30 }]);\n    });\n    it(\"getAll points with after works\", async () => {\n        const employee = await client(Employee).fetchOne(50030);\n        expect(employee.$primaryKey).toEqual(50030);\n        const points = await employee.employeeStatus?.getAllPoints({\n            $after: 1,\n            $unit: \"month\",\n        });\n        expect(points).toBeDefined();\n        expect(points).toEqual([{ time: \"2012-02-12\", value: 10 }, {\n                time: \"2014-04-14\",\n                value: 30,\n            }]);\n    });\n    it(\"getAll points with absolute range works\", async () => {\n        const employee = await client(Employee).fetchOne(50030);\n        expect(employee.$primaryKey).toEqual(50030);\n        const points = await employee.employeeStatus?.getAllPoints({\n            $startTime: \"2013-03-12T12:00:00.000Z\",\n            $endTime: \"2014-04-14T12:00:00.000Z\",\n        });\n        expect(points).toBeDefined();\n        expect(points).toEqual([{\n                time: \"2013-03-13\",\n                value: 20,\n            }, { time: \"2014-04-14\", value: 30 }]);\n    });\n    it(\"getAll points with no query works\", async () => {\n        const employee = await client(Employee).fetchOne(50030);\n        expect(employee.$primaryKey).toEqual(50030);\n        const points = await employee.employeeStatus?.getAllPoints();\n        expect(points).toBeDefined();\n        expect(points).toEqual([\n            { time: \"2012-02-12\", value: 10 },\n            { time: \"2012-02-12\", value: 10 },\n            {\n                time: \"2013-03-13\",\n                value: 20,\n            },\n            { time: \"2014-04-14\", value: 30 },\n            { time: \"2014-04-14\", value: 30 },\n        ]);\n    });\n    it(\"async iter points with absolute range works\", async () => {\n        const employee = await client(Employee).fetchOne(50030);\n        expect(employee.$primaryKey).toEqual(50030);\n        const pointsIter = employee.employeeStatus?.asyncIterPoints({\n            $startTime: \"2013-03-12T12:00:00.000Z\",\n            $endTime: \"2014-04-14T12:00:00.000Z\",\n        });\n        const points = [];\n        for await (const point of pointsIter) {\n            points.push(point);\n        }\n        expect(points).toBeDefined();\n        expect(points).toEqual([{\n                time: \"2013-03-13\",\n                value: 20,\n            }, { time: \"2014-04-14\", value: 30 }]);\n    });\n    it(\"async iter points with no query\", async () => {\n        const employee = await client(Employee).fetchOne(50030);\n        expect(employee.$primaryKey).toEqual(50030);\n        const pointsIter = employee.employeeStatus?.asyncIterPoints();\n        const points = [];\n        for await (const point of pointsIter) {\n            points.push(point);\n        }\n        expect(points).toBeDefined();\n        expect(points).toEqual([\n            { time: \"2012-02-12\", value: 10 },\n            { time: \"2012-02-12\", value: 10 },\n            {\n                time: \"2013-03-13\",\n                value: 20,\n            },\n            { time: \"2014-04-14\", value: 30 },\n            { time: \"2014-04-14\", value: 30 },\n        ]);\n    });\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAY,EAAEC,QAAQ,QAAQ,4BAA4B;AACnE,SAASC,SAAS,QAAQ,mBAAmB;AAC7C,SAASC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,EAAE,QAAQ,QAAQ;AAClE,SAASC,YAAY,QAAQ,oBAAoB;AACjDH,QAAQ,CAAC,YAAY,EAAE,MAAM;EACzB,IAAII,MAAM;EACVL,SAAS,CAAC,YAAY;IAClBF,SAAS,CAACQ,MAAM,CAAC,CAAC;IAClBD,MAAM,GAAGD,YAAY,CAAC,4BAA4B,EAAER,YAAY,EAAE,YAAY,eAAe,CAAC;EAClG,CAAC,CAAC;EACFG,QAAQ,CAAC,MAAM;IACXD,SAAS,CAACS,KAAK,CAAC,CAAC;EACrB,CAAC,CAAC;EACFJ,EAAE,CAAC,wBAAwB,EAAE,YAAY;IACrC,MAAMK,QAAQ,GAAG,MAAMH,MAAM,CAACR,QAAQ,CAAC,CAACY,QAAQ,CAAC,KAAK,CAAC;IACvDP,MAAM,CAACM,QAAQ,CAACE,WAAW,CAAC,CAACC,OAAO,CAAC,KAAK,CAAC;IAC3C,MAAMC,KAAK,GAAG,MAAMJ,QAAQ,CAACK,cAAc,EAAEC,aAAa,CAAC,CAAC;IAC5DZ,MAAM,CAACU,KAAK,EAAEG,IAAI,CAAC,CAACJ,OAAO,CAAC,YAAY,CAAC;IACzCT,MAAM,CAACU,KAAK,EAAEI,KAAK,CAAC,CAACL,OAAO,CAAC,EAAE,CAAC;EACpC,CAAC,CAAC;EACFR,EAAE,CAAC,uBAAuB,EAAE,YAAY;IACpC,MAAMK,QAAQ,GAAG,MAAMH,MAAM,CAACR,QAAQ,CAAC,CAACY,QAAQ,CAAC,KAAK,CAAC;IACvDP,MAAM,CAACM,QAAQ,CAACE,WAAW,CAAC,CAACC,OAAO,CAAC,KAAK,CAAC;IAC3C,MAAMC,KAAK,GAAG,MAAMJ,QAAQ,CAACK,cAAc,EAAEI,YAAY,CAAC,CAAC;IAC3Df,MAAM,CAACU,KAAK,EAAEG,IAAI,CAAC,CAACJ,OAAO,CAAC,YAAY,CAAC;IACzCT,MAAM,CAACU,KAAK,EAAEI,KAAK,CAAC,CAACL,OAAO,CAAC,EAAE,CAAC;EACpC,CAAC,CAAC;EACFR,EAAE,CAAC,iCAAiC,EAAE,YAAY;IAC9C,MAAMK,QAAQ,GAAG,MAAMH,MAAM,CAACR,QAAQ,CAAC,CAACY,QAAQ,CAAC,KAAK,CAAC;IACvDP,MAAM,CAACM,QAAQ,CAACE,WAAW,CAAC,CAACC,OAAO,CAAC,KAAK,CAAC;IAC3C,MAAMO,MAAM,GAAG,MAAMV,QAAQ,CAACK,cAAc,EAAEM,YAAY,CAAC;MACvDC,OAAO,EAAE,CAAC;MACVC,KAAK,EAAE;IACX,CAAC,CAAC;IACFnB,MAAM,CAACgB,MAAM,CAAC,CAACI,WAAW,CAAC,CAAC;IAC5BpB,MAAM,CAACgB,MAAM,CAAC,CAACP,OAAO,CAAC,CAAC;MAAEI,IAAI,EAAE,YAAY;MAAEC,KAAK,EAAE;IAAG,CAAC,EAAE;MACnDD,IAAI,EAAE,YAAY;MAClBC,KAAK,EAAE;IACX,CAAC,EAAE;MAAED,IAAI,EAAE,YAAY;MAAEC,KAAK,EAAE;IAAG,CAAC,CAAC,CAAC;EAC9C,CAAC,CAAC;EACFb,EAAE,CAAC,gCAAgC,EAAE,YAAY;IAC7C,MAAMK,QAAQ,GAAG,MAAMH,MAAM,CAACR,QAAQ,CAAC,CAACY,QAAQ,CAAC,KAAK,CAAC;IACvDP,MAAM,CAACM,QAAQ,CAACE,WAAW,CAAC,CAACC,OAAO,CAAC,KAAK,CAAC;IAC3C,MAAMO,MAAM,GAAG,MAAMV,QAAQ,CAACK,cAAc,EAAEM,YAAY,CAAC;MACvDI,MAAM,EAAE,CAAC;MACTF,KAAK,EAAE;IACX,CAAC,CAAC;IACFnB,MAAM,CAACgB,MAAM,CAAC,CAACI,WAAW,CAAC,CAAC;IAC5BpB,MAAM,CAACgB,MAAM,CAAC,CAACP,OAAO,CAAC,CAAC;MAAEI,IAAI,EAAE,YAAY;MAAEC,KAAK,EAAE;IAAG,CAAC,EAAE;MACnDD,IAAI,EAAE,YAAY;MAClBC,KAAK,EAAE;IACX,CAAC,CAAC,CAAC;EACX,CAAC,CAAC;EACFb,EAAE,CAAC,yCAAyC,EAAE,YAAY;IACtD,MAAMK,QAAQ,GAAG,MAAMH,MAAM,CAACR,QAAQ,CAAC,CAACY,QAAQ,CAAC,KAAK,CAAC;IACvDP,MAAM,CAACM,QAAQ,CAACE,WAAW,CAAC,CAACC,OAAO,CAAC,KAAK,CAAC;IAC3C,MAAMO,MAAM,GAAG,MAAMV,QAAQ,CAACK,cAAc,EAAEM,YAAY,CAAC;MACvDK,UAAU,EAAE,0BAA0B;MACtCC,QAAQ,EAAE;IACd,CAAC,CAAC;IACFvB,MAAM,CAACgB,MAAM,CAAC,CAACI,WAAW,CAAC,CAAC;IAC5BpB,MAAM,CAACgB,MAAM,CAAC,CAACP,OAAO,CAAC,CAAC;MAChBI,IAAI,EAAE,YAAY;MAClBC,KAAK,EAAE;IACX,CAAC,EAAE;MAAED,IAAI,EAAE,YAAY;MAAEC,KAAK,EAAE;IAAG,CAAC,CAAC,CAAC;EAC9C,CAAC,CAAC;EACFb,EAAE,CAAC,mCAAmC,EAAE,YAAY;IAChD,MAAMK,QAAQ,GAAG,MAAMH,MAAM,CAACR,QAAQ,CAAC,CAACY,QAAQ,CAAC,KAAK,CAAC;IACvDP,MAAM,CAACM,QAAQ,CAACE,WAAW,CAAC,CAACC,OAAO,CAAC,KAAK,CAAC;IAC3C,MAAMO,MAAM,GAAG,MAAMV,QAAQ,CAACK,cAAc,EAAEM,YAAY,CAAC,CAAC;IAC5DjB,MAAM,CAACgB,MAAM,CAAC,CAACI,WAAW,CAAC,CAAC;IAC5BpB,MAAM,CAACgB,MAAM,CAAC,CAACP,OAAO,CAAC,CACnB;MAAEI,IAAI,EAAE,YAAY;MAAEC,KAAK,EAAE;IAAG,CAAC,EACjC;MAAED,IAAI,EAAE,YAAY;MAAEC,KAAK,EAAE;IAAG,CAAC,EACjC;MACID,IAAI,EAAE,YAAY;MAClBC,KAAK,EAAE;IACX,CAAC,EACD;MAAED,IAAI,EAAE,YAAY;MAAEC,KAAK,EAAE;IAAG,CAAC,EACjC;MAAED,IAAI,EAAE,YAAY;MAAEC,KAAK,EAAE;IAAG,CAAC,CACpC,CAAC;EACN,CAAC,CAAC;EACFb,EAAE,CAAC,6CAA6C,EAAE,YAAY;IAC1D,MAAMK,QAAQ,GAAG,MAAMH,MAAM,CAACR,QAAQ,CAAC,CAACY,QAAQ,CAAC,KAAK,CAAC;IACvDP,MAAM,CAACM,QAAQ,CAACE,WAAW,CAAC,CAACC,OAAO,CAAC,KAAK,CAAC;IAC3C,MAAMe,UAAU,GAAGlB,QAAQ,CAACK,cAAc,EAAEc,eAAe,CAAC;MACxDH,UAAU,EAAE,0BAA0B;MACtCC,QAAQ,EAAE;IACd,CAAC,CAAC;IACF,MAAMP,MAAM,GAAG,EAAE;IACjB,WAAW,MAAMN,KAAK,IAAIc,UAAU,EAAE;MAClCR,MAAM,CAACU,IAAI,CAAChB,KAAK,CAAC;IACtB;IACAV,MAAM,CAACgB,MAAM,CAAC,CAACI,WAAW,CAAC,CAAC;IAC5BpB,MAAM,CAACgB,MAAM,CAAC,CAACP,OAAO,CAAC,CAAC;MAChBI,IAAI,EAAE,YAAY;MAClBC,KAAK,EAAE;IACX,CAAC,EAAE;MAAED,IAAI,EAAE,YAAY;MAAEC,KAAK,EAAE;IAAG,CAAC,CAAC,CAAC;EAC9C,CAAC,CAAC;EACFb,EAAE,CAAC,iCAAiC,EAAE,YAAY;IAC9C,MAAMK,QAAQ,GAAG,MAAMH,MAAM,CAACR,QAAQ,CAAC,CAACY,QAAQ,CAAC,KAAK,CAAC;IACvDP,MAAM,CAACM,QAAQ,CAACE,WAAW,CAAC,CAACC,OAAO,CAAC,KAAK,CAAC;IAC3C,MAAMe,UAAU,GAAGlB,QAAQ,CAACK,cAAc,EAAEc,eAAe,CAAC,CAAC;IAC7D,MAAMT,MAAM,GAAG,EAAE;IACjB,WAAW,MAAMN,KAAK,IAAIc,UAAU,EAAE;MAClCR,MAAM,CAACU,IAAI,CAAChB,KAAK,CAAC;IACtB;IACAV,MAAM,CAACgB,MAAM,CAAC,CAACI,WAAW,CAAC,CAAC;IAC5BpB,MAAM,CAACgB,MAAM,CAAC,CAACP,OAAO,CAAC,CACnB;MAAEI,IAAI,EAAE,YAAY;MAAEC,KAAK,EAAE;IAAG,CAAC,EACjC;MAAED,IAAI,EAAE,YAAY;MAAEC,KAAK,EAAE;IAAG,CAAC,EACjC;MACID,IAAI,EAAE,YAAY;MAClBC,KAAK,EAAE;IACX,CAAC,EACD;MAAED,IAAI,EAAE,YAAY;MAAEC,KAAK,EAAE;IAAG,CAAC,EACjC;MAAED,IAAI,EAAE,YAAY;MAAEC,KAAK,EAAE;IAAG,CAAC,CACpC,CAAC;EACN,CAAC,CAAC;AACN,CAAC,CAAC","ignoreList":[]}