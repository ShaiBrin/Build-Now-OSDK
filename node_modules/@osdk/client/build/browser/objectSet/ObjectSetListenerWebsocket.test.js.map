{"version":3,"file":"ObjectSetListenerWebsocket.test.js","names":["$ontologyRid","Employee","Office","apiServer","ImportedWebSocket","http","HttpResponse","afterAll","afterEach","beforeAll","beforeEach","describe","expect","it","vi","z","createMinimalClient","conjureUnionType","ObjectSetListenerWebsocket","rootLogger","hoisted","pino","pinoPretty","EventEmitter","Promise","resolve","level","build","sync","timestampKey","undefined","errorLikeObjectKeys","errorProps","ignore","destination","write","a","at","slice","console","log","MockedWebSocket","STACK","mock","importOriginal","original","WebSocket","createMockWebSocketConstructor","default","listen","addLoggerToApiServer","close","minimalClient","MINIMUM_RECONNECT_DELAY","OBJECT_SET_EXPIRY_MS","client","listener","oslwInst","ontologyRid","logger","child","minimumReconnectDelayMs","objectSetExpiryMs","onChange","fn","onError","onOutOfDate","objectSetRidCounter","use","post","json","objectSetRid","useFakeTimers","restoreAllMocks","resetHandlers","not","toHaveBeenCalled","ws","unsubscribe","subReq1","subscribeAndExpectWebSocket","expectSingleSubscribeMessage","setWebSocketState","runAllTicks","expectEqualRemoveAndAddListeners","respondSuccessToSubscribe","send","all","expectWebSocketConstructed","advanceTimersByTimeAsync","subReq2","unsubscribe2","subscribe","type","objectType","apiName","fatal","id","toEqual","toHaveBeenCalledTimes","sendToClient","responses","requests","map","_","i","removeEventListener","addEventListener","calls","length","SubscribeMessage","parse","consumeSingleSend","waitFor","results","value","mockClear","toBeCalledTimes","result","JSON","lastCall","toString","OriginalWebSocket","ret","_args","webSocketInst","debug","eventEmitter","EventTarget","bind","message","_eventEmitter","readyState","CONNECTING","Object","assign","OPEN","CLOSED","CLOSING","newState","dispatchEvent","Event","name","requestId","request","trace","url","eventNames","c","events","on","object","string","array","objectSet","objectSetContext","any","watchAllLinks","boolean","MessageEvent","data","constructor","stringify","t"],"sources":["ObjectSetListenerWebsocket.test.js"],"sourcesContent":["/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { $ontologyRid, Employee, Office } from \"@osdk/client.test.ontology\";\nimport { apiServer } from \"@osdk/shared.test\";\nimport ImportedWebSocket from \"isomorphic-ws\";\nimport { http, HttpResponse } from \"msw\";\nimport { afterAll, afterEach, beforeAll, beforeEach, describe, expect, it, vi, } from \"vitest\";\nimport { z } from \"zod\";\nimport { createMinimalClient } from \"../createMinimalClient.js\";\nimport { conjureUnionType } from \"./conjureUnionType.js\";\nimport { ObjectSetListenerWebsocket } from \"./ObjectSetListenerWebsocket.js\";\n// it needs to be hoisted because its referenced from our mocked WebSocket\n// which must be hoisted to work\nconst rootLogger = await vi.hoisted(async () => {\n    const pino = (await import(\"pino\")).pino;\n    const pinoPretty = await import(\"pino-pretty\");\n    const { EventEmitter } = await import(\"node:events\");\n    class PinoConsoleLogDestination extends EventEmitter {\n        write(a) {\n            // remove trailing newline since console.log adds one\n            if (a.at(-1) === \"\\n\")\n                a = a.slice(0, -1);\n            // This lets the test framework aggregate the logs per test, whereas direct to stdout does not\n            console.log(a);\n        }\n    }\n    return Promise.resolve(pino({ level: \"info\" }, (pinoPretty.build)({\n        sync: true,\n        timestampKey: undefined,\n        errorLikeObjectKeys: [\"error\", \"err\", \"exception\"],\n        errorProps: \"stack,cause,properties\",\n        ignore: \"time,hostname,pid\",\n        destination: new PinoConsoleLogDestination(),\n    })));\n});\n// make local uses of WebSocket typed right\nconst MockedWebSocket = ImportedWebSocket;\nconst STACK = \"https://stack.palantir.com\";\nvi.mock(\"isomorphic-ws\", async (importOriginal) => {\n    const original = await importOriginal();\n    const WebSocket = createMockWebSocketConstructor(original.default, rootLogger);\n    return { default: WebSocket, WebSocket };\n});\ndescribe(\"ObjectSetListenerWebsocket\", async () => {\n    beforeAll(async () => {\n        apiServer.listen();\n        addLoggerToApiServer(rootLogger);\n    });\n    afterAll(() => {\n        apiServer.close();\n    });\n    describe(\"basic setup\", () => {\n        let minimalClient;\n        const MINIMUM_RECONNECT_DELAY = 2_000;\n        const OBJECT_SET_EXPIRY_MS = 60_000;\n        let client;\n        let listener;\n        let oslwInst = 0;\n        beforeEach(() => {\n            minimalClient = createMinimalClient({ ontologyRid: $ontologyRid }, STACK, async () => \"myAccessToken\", { logger: rootLogger });\n            client = new ObjectSetListenerWebsocket({\n                ...minimalClient,\n                logger: rootLogger.child({ oslwInst: oslwInst++ }),\n            }, {\n                minimumReconnectDelayMs: MINIMUM_RECONNECT_DELAY,\n                objectSetExpiryMs: OBJECT_SET_EXPIRY_MS,\n            });\n            listener = {\n                onChange: vi.fn(),\n                onError: vi.fn(),\n                onOutOfDate: vi.fn(),\n            };\n            let objectSetRidCounter = 0;\n            apiServer.use(http.post(`${STACK}/object-set-service/api/objectSets/temporary`, () => HttpResponse.json({\n                objectSetRid: `rid.hi.${objectSetRidCounter++}`,\n            })), http.post(`${STACK}/object-set-watcher/api/object-set-watcher/batchEnableWatcher`, async () => {\n                return HttpResponse.json({});\n            }));\n            vi.useFakeTimers();\n        });\n        afterEach(() => {\n            vi.restoreAllMocks();\n            apiServer.resetHandlers();\n        });\n        it(\"should not send onOutOfDate since it has not subscribed yet\", () => {\n            expect(MockedWebSocket).not.toHaveBeenCalled();\n            expect(listener.onOutOfDate).not.toHaveBeenCalled();\n            expect(listener.onChange).not.toHaveBeenCalled();\n            expect(listener.onError).not.toHaveBeenCalled();\n        });\n        describe(\"requests subscription\", () => {\n            let ws;\n            let unsubscribe;\n            let subReq1;\n            beforeEach(async () => {\n                [ws, unsubscribe] = await subscribeAndExpectWebSocket(client, listener);\n                subReq1 = await expectSingleSubscribeMessage(ws);\n            });\n            afterEach(() => {\n                // just ensure we ended in good states, as we clear these as we consume them\n                expect(MockedWebSocket).not.toHaveBeenCalled();\n                // make sure we are unsubscribed so closing the socket doesn't trigger reconnects\n                unsubscribe();\n                // disconnect the socket\n                setWebSocketState(ws, \"close\");\n                vi.runAllTicks();\n                // Make sure we cleaned up\n                expectEqualRemoveAndAddListeners(ws);\n            });\n            it(\"only sends a single request\", async () => {\n                respondSuccessToSubscribe(ws, subReq1);\n                // actually this is broken FIXME\n                unsubscribe();\n                expect(ws.send).not.toHaveBeenCalled();\n            });\n            describe(\"socket closed before subscription confirmed\", () => {\n                beforeEach(() => {\n                    setWebSocketState(ws, \"close\");\n                    expectEqualRemoveAndAddListeners(ws);\n                });\n                describe(\"reconnect\", async () => {\n                    beforeEach(async () => {\n                        [ws] = await Promise.all([\n                            expectWebSocketConstructed(),\n                            // delay for connection reconnect\n                            vi.advanceTimersByTimeAsync(MINIMUM_RECONNECT_DELAY),\n                        ]);\n                        setWebSocketState(ws, \"open\");\n                    });\n                    describe(\"subscribe and respond\", () => {\n                        beforeEach(async () => {\n                            const subReq2 = await expectSingleSubscribeMessage(ws);\n                            respondSuccessToSubscribe(ws, subReq2);\n                        });\n                        it(\"should not send out of date\", () => {\n                            expect(listener.onOutOfDate).not.toHaveBeenCalled();\n                        });\n                    });\n                });\n            });\n            describe(\"successfully subscribed\", () => {\n                beforeEach(() => {\n                    respondSuccessToSubscribe(ws, subReq1);\n                });\n                describe(\"additional subscription\", async () => {\n                    let unsubscribe2;\n                    let subReq2;\n                    beforeEach(async () => {\n                        [unsubscribe2, subReq2] = await Promise.all([\n                            client.subscribe({\n                                type: \"base\",\n                                objectType: Office.apiName,\n                            }, listener),\n                            expectSingleSubscribeMessage(ws),\n                        ]);\n                        rootLogger.fatal({ subReq2 });\n                        respondSuccessToSubscribe(ws, subReq2);\n                    });\n                    afterEach(() => {\n                        unsubscribe2();\n                    });\n                    it(\"does not trigger an out of date \", () => {\n                        expect(listener.onOutOfDate).not.toHaveBeenCalled();\n                    });\n                });\n                describe(\"temporary object set expires\", () => {\n                    beforeEach(async () => {\n                        await vi.advanceTimersByTimeAsync(OBJECT_SET_EXPIRY_MS + 1000);\n                    });\n                    it(\"should resubscribe and fire out of date\", async () => {\n                        vi.runAllTicks();\n                        const subReq2 = await expectSingleSubscribeMessage(ws);\n                        expect(subReq2.id).not.toEqual(subReq1.id);\n                        respondSuccessToSubscribe(ws, subReq2);\n                        expect(listener.onOutOfDate).toHaveBeenCalledTimes(1);\n                    });\n                });\n                describe(\"socket closed abruptly\", () => {\n                    beforeEach(() => {\n                        setWebSocketState(ws, \"close\");\n                        expectEqualRemoveAndAddListeners(ws);\n                    });\n                    describe(\"reconnect, resubscribe successfully\", async () => {\n                        beforeEach(async () => {\n                            [ws] = await Promise.all([\n                                expectWebSocketConstructed(),\n                                // delay for connection reconnect\n                                vi.advanceTimersByTimeAsync(MINIMUM_RECONNECT_DELAY),\n                            ]);\n                            setWebSocketState(ws, \"open\");\n                            const subReq2 = await expectSingleSubscribeMessage(ws);\n                            respondSuccessToSubscribe(ws, subReq2);\n                        });\n                        it(\"should send out of date\", () => {\n                            expect(listener.onOutOfDate).toHaveBeenCalledTimes(1);\n                        });\n                    });\n                });\n                it(\"should not send onOutOfDate for first call\", () => {\n                    expect(MockedWebSocket).not.toHaveBeenCalled();\n                    expect(listener.onOutOfDate).not.toHaveBeenCalled();\n                    expect(listener.onChange).not.toHaveBeenCalled();\n                    expect(listener.onError).not.toHaveBeenCalled();\n                });\n            });\n        });\n    });\n});\nfunction respondSuccessToSubscribe(ws, subReq2) {\n    sendToClient(ws, conjureUnionType(\"subscribeResponses\", {\n        id: subReq2.id,\n        responses: subReq2.requests.map((_, i) => conjureUnionType(\"success\", { id: `id-${i}` })),\n    }));\n}\nfunction expectEqualRemoveAndAddListeners(ws) {\n    expect(ws.removeEventListener).toHaveBeenCalledTimes(ws.addEventListener.mock.calls.length);\n}\nasync function expectSingleSubscribeMessage(ws) {\n    return SubscribeMessage.parse(await consumeSingleSend(ws));\n}\nasync function subscribeAndExpectWebSocket(client, listener) {\n    const [ws, unsubscribe] = await Promise.all([\n        expectWebSocketConstructed(),\n        client.subscribe({\n            type: \"base\",\n            objectType: Employee.apiName,\n        }, listener),\n    ]);\n    // otherwise the ObjectSetListenerWebSocket is sitting waiting for it to \"connect\"\n    setWebSocketState(ws, \"open\");\n    return [ws, unsubscribe];\n}\nasync function expectWebSocketConstructed() {\n    expect(MockedWebSocket).toHaveBeenCalledTimes(0);\n    const ws = await vi.waitFor(() => {\n        expect(MockedWebSocket).toHaveBeenCalled();\n        expect(MockedWebSocket.mock.results[0].type === \"return\");\n        return MockedWebSocket.mock.results[0].value;\n    });\n    expect(MockedWebSocket).toHaveBeenCalledTimes(1);\n    MockedWebSocket.mockClear();\n    expect(MockedWebSocket).toHaveBeenCalledTimes(0);\n    return ws;\n}\nasync function consumeSingleSend(ws) {\n    return await vi.waitFor(() => {\n        expect(ws.send).toBeCalledTimes(1);\n        const result = JSON.parse(ws.send.mock.lastCall[0].toString());\n        ws.send.mockClear();\n        return result;\n    });\n}\nfunction createMockWebSocketConstructor(OriginalWebSocket, logger) {\n    let i = 0;\n    const ret = vi.fn(function (..._args) {\n        const webSocketInst = i++;\n        logger.debug(\"WebSocket constructor called\");\n        const eventEmitter = new EventTarget();\n        return {\n            addEventListener: vi.fn(eventEmitter.addEventListener.bind(eventEmitter)),\n            removeEventListener: vi.fn(eventEmitter.removeEventListener.bind(eventEmitter)),\n            send: vi.fn((a, _b) => {\n                logger.debug({ message: JSON.parse(a.toString()), webSocketInst }, \"send() called\");\n            }),\n            close: vi.fn(),\n            _eventEmitter: eventEmitter,\n            readyState: OriginalWebSocket.CONNECTING,\n        };\n        // ^ we only implement some things but the type system wants to think its the full deal,\n        // thus the satisfies plus the cast\n    });\n    Object.assign(ret, {\n        OPEN: OriginalWebSocket.OPEN,\n        CLOSED: OriginalWebSocket.CLOSED,\n        CLOSING: OriginalWebSocket.CLOSING,\n        CONNECTING: OriginalWebSocket.CONNECTING,\n    });\n    return ret;\n}\nfunction setWebSocketState(ws, readyState) {\n    const newState = readyState === \"open\"\n        ? ImportedWebSocket.OPEN\n        : ImportedWebSocket.CLOSED;\n    if (newState === ws.readyState)\n        return;\n    ws.readyState = newState;\n    ws._eventEmitter.dispatchEvent(new Event(readyState, {}));\n}\nfunction addLoggerToApiServer(logger) {\n    const z = (name, { requestId, request }) => logger.trace({ requestId, url: request.url }, name);\n    const eventNames = [\n        \"request:start\",\n        \"request:match\",\n        \"request:end\",\n        \"request:unhandled\",\n        \"response:bypass\",\n        \"response:mocked\",\n    ];\n    for (const c of eventNames) {\n        apiServer.events.on(c, z.bind(undefined, c));\n    }\n}\nconst SubscribeMessage = z.object({\n    id: z.string(),\n    requests: z.array(z.object({\n        objectSet: z.string(),\n        objectSetContext: z.any(),\n        watchAllLinks: z.boolean(),\n    })),\n});\nclass MessageEvent extends Event {\n    data;\n    constructor(data) {\n        super(\"message\");\n        this.data = JSON.stringify(data);\n    }\n}\nfunction sendToClient(ws, t) {\n    ws._eventEmitter.dispatchEvent(new MessageEvent(t));\n}\n"],"mappings":"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","ignoreList":[]}