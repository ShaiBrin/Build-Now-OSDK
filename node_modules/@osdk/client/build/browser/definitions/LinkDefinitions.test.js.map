{"version":3,"file":"LinkDefinitions.test.js","names":["describe","expectTypeOf","it","toEqualTypeOf","branded"],"sources":["LinkDefinitions.test.js"],"sourcesContent":["/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { describe, expectTypeOf, it } from \"vitest\";\ndescribe(\"LinkDefinitions\", () => {\n    describe(\"OsdkObjectLinkObject\", () => {\n        it(\"is correctly absent on types with no links\", () => {\n            expectTypeOf()\n                .toEqualTypeOf();\n        });\n        it(\"populates on types with links\", () => {\n            expectTypeOf()\n                .toEqualTypeOf();\n        });\n        describe(\"SingletonLinkAccessor\", () => {\n            it(\"infers select properly\", () => {\n                // this helper lets us get return types of functions that are generic\n                class Helper {\n                    accessor;\n                    constructor(accessor) {\n                        this.accessor = accessor;\n                    }\n                    fetchOne() {\n                        return this.accessor.fetchOne();\n                    }\n                }\n                //   // e.g. .lead.fetchOne({});\n                expectTypeOf()\n                    .branded.toEqualTypeOf();\n                // e.g. .lead.fetchOne();\n                expectTypeOf().branded\n                    .toEqualTypeOf();\n                // e.g. .lead.fetchOne({ select: [] });\n                expectTypeOf().branded\n                    .toEqualTypeOf();\n                // e.g. .lead.fetchOne({ select: [\"name\"] });\n                expectTypeOf()\n                    .toEqualTypeOf();\n            });\n        });\n    });\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAQ,EAAEC,YAAY,EAAEC,EAAE,QAAQ,QAAQ;AACnDF,QAAQ,CAAC,iBAAiB,EAAE,MAAM;EAC9BA,QAAQ,CAAC,sBAAsB,EAAE,MAAM;IACnCE,EAAE,CAAC,4CAA4C,EAAE,MAAM;MACnDD,YAAY,CAAC,CAAC,CACTE,aAAa,CAAC,CAAC;IACxB,CAAC,CAAC;IACFD,EAAE,CAAC,+BAA+B,EAAE,MAAM;MACtCD,YAAY,CAAC,CAAC,CACTE,aAAa,CAAC,CAAC;IACxB,CAAC,CAAC;IACFH,QAAQ,CAAC,uBAAuB,EAAE,MAAM;MACpCE,EAAE,CAAC,wBAAwB,EAAE,MAAM;QAC/B;;QAUA;QACAD,YAAY,CAAC,CAAC,CACTG,OAAO,CAACD,aAAa,CAAC,CAAC;QAC5B;QACAF,YAAY,CAAC,CAAC,CAACG,OAAO,CACjBD,aAAa,CAAC,CAAC;QACpB;QACAF,YAAY,CAAC,CAAC,CAACG,OAAO,CACjBD,aAAa,CAAC,CAAC;QACpB;QACAF,YAAY,CAAC,CAAC,CACTE,aAAa,CAAC,CAAC;MACxB,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC,CAAC;AACN,CAAC,CAAC","ignoreList":[]}