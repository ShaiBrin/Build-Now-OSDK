{"version":3,"file":"applyAction.js","names":["OntologiesV2","invariant","addUserAgentAndRequestContextHeaders","augmentRequestContext","toDataValue","ActionValidationError","applyAction","client","action","parameters","options","clientWithHeaders","finalMethodCall","Array","isArray","response","Actions","applyBatch","ontologyRid","apiName","requests","remapBatchActionParams","returnEdits","$returnEdits","edits","type","remapActionResponse","undefined","apply","remapActionParams","mode","$validateOnly","validation","result","params","parameterMap","key","value","Object","entries","remappedParams","Promise","all","map","param","editResponses","remappedActionResponse","deletedLinksCount","deletedObjectsCount","addedLinks","addedObjects","modifiedObjects","editedObjectTypes","editedObjectTypesSet","Set","edit","push","linkTypeApiNameAtoB","linkTypeApiNameBtoA","aSideObject","bSideObject","add","objectType","primaryKey","process","env","NODE_ENV"],"sources":["applyAction.js"],"sourcesContent":["/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as OntologiesV2 from \"@osdk/internal.foundry.ontologiesv2\";\nimport invariant from \"tiny-invariant\";\nimport { addUserAgentAndRequestContextHeaders } from \"../util/addUserAgentAndRequestContextHeaders.js\";\nimport { augmentRequestContext } from \"../util/augmentRequestContext.js\";\nimport { toDataValue } from \"../util/toDataValue.js\";\nimport { ActionValidationError } from \"./ActionValidationError.js\";\nexport async function applyAction(client, action, parameters, options = {}) {\n    const clientWithHeaders = addUserAgentAndRequestContextHeaders(augmentRequestContext(client, _ => ({ finalMethodCall: \"applyAction\" })), action);\n    if (Array.isArray(parameters)) {\n        const response = await OntologiesV2.Actions.applyBatch(clientWithHeaders, await client.ontologyRid, action.apiName, {\n            requests: parameters\n                ? await remapBatchActionParams(parameters, client)\n                : [],\n            options: {\n                returnEdits: options?.$returnEdits ? \"ALL\" : \"NONE\",\n            },\n        });\n        const edits = response.edits;\n        return (options?.$returnEdits\n            ? edits?.type === \"edits\" ? remapActionResponse(response) : edits\n            : undefined);\n    }\n    else {\n        const response = await OntologiesV2.Actions.apply(clientWithHeaders, await client.ontologyRid, action.apiName, {\n            parameters: await remapActionParams(parameters, client),\n            options: {\n                mode: options?.$validateOnly\n                    ? \"VALIDATE_ONLY\"\n                    : \"VALIDATE_AND_EXECUTE\",\n                returnEdits: options\n                    ?.$returnEdits\n                    ? \"ALL\"\n                    : \"NONE\",\n            },\n        });\n        if (options?.$validateOnly) {\n            return response.validation;\n        }\n        if (response.validation?.result === \"INVALID\") {\n            throw new ActionValidationError(response.validation);\n        }\n        const edits = response.edits;\n        return (options?.$returnEdits\n            ? edits?.type === \"edits\" ? remapActionResponse(response) : edits\n            : undefined);\n    }\n}\nasync function remapActionParams(params, client) {\n    if (params == null) {\n        return {};\n    }\n    const parameterMap = {};\n    for (const [key, value] of Object.entries(params)) {\n        parameterMap[key] = await toDataValue(value, client);\n    }\n    return parameterMap;\n}\nasync function remapBatchActionParams(params, client) {\n    const remappedParams = await Promise.all(params.map(async (param) => {\n        return { parameters: await remapActionParams(param, client) };\n    }));\n    return remappedParams;\n}\nexport function remapActionResponse(response) {\n    const editResponses = response?.edits;\n    if (editResponses?.type === \"edits\") {\n        const remappedActionResponse = {\n            type: editResponses.type,\n            deletedLinksCount: editResponses.deletedLinksCount,\n            deletedObjectsCount: editResponses.deletedObjectsCount,\n            addedLinks: [],\n            addedObjects: [],\n            modifiedObjects: [],\n            editedObjectTypes: [],\n        };\n        const editedObjectTypesSet = new Set();\n        for (const edit of editResponses.edits) {\n            if (edit.type === \"addLink\") {\n                remappedActionResponse.addedLinks.push({\n                    linkTypeApiNameAtoB: edit.linkTypeApiNameAtoB,\n                    linkTypeApiNameBtoA: edit.linkTypeApiNameBtoA,\n                    aSideObject: edit.aSideObject,\n                    bSideObject: edit.bSideObject,\n                });\n                editedObjectTypesSet.add(edit.aSideObject.objectType);\n                editedObjectTypesSet.add(edit.bSideObject.objectType);\n            }\n            else if (edit.type === \"addObject\") {\n                remappedActionResponse.addedObjects.push({\n                    objectType: edit.objectType,\n                    primaryKey: edit.primaryKey,\n                });\n                editedObjectTypesSet.add(edit.objectType);\n            }\n            else if (edit.type === \"modifyObject\") {\n                remappedActionResponse.modifiedObjects.push({\n                    objectType: edit.objectType,\n                    primaryKey: edit.primaryKey,\n                });\n                editedObjectTypesSet.add(edit.objectType);\n            }\n            else {\n                invariant(false, \"Unknown edit type\");\n            }\n        }\n        remappedActionResponse.editedObjectTypes = [...editedObjectTypesSet];\n        return remappedActionResponse;\n    }\n}\n"],"mappings":"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","ignoreList":[]}