import type { ObjectOrInterfaceDefinition } from "../ontology/ObjectOrInterface.js";
import type { Osdk } from "../OsdkObjectFrom.js";
export interface EXPERIMENTAL_ObjectSetListener<O extends ObjectOrInterfaceDefinition> {
    /**
     * Specific objects have changed and can be immediately updated
     */
    onChange?: (objects: Array<Osdk.Instance<O>>) => void;
    /**
     * The ObjectSet has become outdated and should be re-fetched in its entirety.
     * This is also sent when the subscription is first initialized.
     */
    onOutOfDate?: () => void;
    /**
     * There was a fatal error with the subscription process
     */
    onError?: (error: unknown) => void;
}
//# sourceMappingURL=EXPERIMENTAL_ObjectSetListener.d.ts.map