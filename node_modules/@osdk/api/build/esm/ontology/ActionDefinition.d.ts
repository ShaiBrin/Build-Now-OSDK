import type { OsdkMetadata } from "../OsdkMetadata.js";
import type { ObjectTypeDefinition, ReleaseStatus } from "./ObjectTypeDefinition.js";
export interface ActionMetadata {
    type: "action";
    apiName: string;
    description?: string;
    displayName?: string;
    parameters: Record<any, ActionMetadata.Parameter<any>>;
    modifiedEntities?: Partial<Record<any, {
        created: boolean;
        modified: boolean;
    }>>;
    status: ReleaseStatus;
    rid: string;
}
export declare namespace ActionMetadata {
    interface Parameter<T_Target extends ObjectTypeDefinition = never> {
        type: ValidBaseActionParameterTypes | DataType.Object<any> | DataType.ObjectSet<any>;
        description?: string;
        multiplicity?: boolean;
        nullable?: boolean;
    }
    namespace DataType {
        interface Object<T_Target extends ObjectTypeDefinition = never> {
            __OsdkTargetType?: T_Target;
            type: "object";
            object: T_Target["apiName"];
        }
        interface ObjectSet<T_Target extends ObjectTypeDefinition = never> {
            __OsdkTargetType?: T_Target;
            type: "objectSet";
            objectSet: T_Target["apiName"];
        }
    }
}
export interface ActionCompileTimeMetadata<T> {
    signatures: T;
}
export interface ActionDefinition<T_signatures = never> {
    type: "action";
    apiName: string;
    osdkMetadata?: OsdkMetadata;
    __DefinitionMetadata?: ActionCompileTimeMetadata<T_signatures> & ActionMetadata;
}
export type ValidBaseActionParameterTypes = "boolean" | "string" | "integer" | "long" | "double" | "datetime" | "timestamp" | "attachment" | "marking";
//# sourceMappingURL=ActionDefinition.d.ts.map