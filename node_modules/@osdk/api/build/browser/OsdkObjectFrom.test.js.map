{"version":3,"file":"OsdkObjectFrom.test.js","names":["describe","expectTypeOf","it","toEqualTypeOf","branded","createObjectSetChannel"],"sources":["OsdkObjectFrom.test.js"],"sourcesContent":["/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { describe, expectTypeOf, it } from \"vitest\";\ndescribe(\"ExtractOptions\", () => {\n    describe(\"NullabilityAdherence Generic\", () => {\n        it(\"does not add $notStrict for any\", () => {\n            expectTypeOf()\n                .toEqualTypeOf();\n        });\n        it(\"does not add $notStrict for never\", () => {\n            expectTypeOf()\n                .toEqualTypeOf();\n        });\n        it(\"does not add $notStrict for false\", () => {\n            expectTypeOf()\n                .toEqualTypeOf();\n        });\n        it(\"does not add $notStrict for throw\", () => {\n            expectTypeOf()\n                .toEqualTypeOf();\n        });\n        it(\"does not add $notStrict for drop\", () => {\n            expectTypeOf()\n                .toEqualTypeOf();\n        });\n        it(\"does not add $notStrict for drop | throw\", () => {\n            expectTypeOf()\n                .toEqualTypeOf();\n        });\n        it(\"does not add $notStrict for drop | false\", () => {\n            expectTypeOf()\n                .toEqualTypeOf();\n        });\n        it(\"does not add $notStrict for false | throw\", () => {\n            expectTypeOf()\n                .toEqualTypeOf();\n        });\n        it(\"does not add $notStrict for drop | throw | false\", () => {\n            expectTypeOf()\n                .toEqualTypeOf();\n        });\n        it(\"does not add $notStrict for NullabilityAdherence\", () => {\n            expectTypeOf()\n                .toEqualTypeOf();\n        });\n    });\n    describe(\"Rid Generic\", () => {\n        it(\"does not add $rid for false\", () => {\n            expectTypeOf().toEqualTypeOf();\n        });\n        it(\"does add $rid for true\", () => {\n            expectTypeOf().toEqualTypeOf();\n        });\n        it(\"does not add $rid for any\", () => {\n            expectTypeOf().toEqualTypeOf();\n        });\n        it(\"does not add $rid for never\", () => {\n            expectTypeOf().toEqualTypeOf();\n        });\n        it(\"does not add $rid for boolean\", () => {\n            expectTypeOf().toEqualTypeOf();\n        });\n        it(\"does not add $rid for true | false\", () => {\n            expectTypeOf().toEqualTypeOf();\n        });\n    });\n    describe(\"Osdk.Instance\", () => {\n        it(\"defaults to second argument never if omitted\", () => {\n            expectTypeOf().toEqualTypeOf();\n            // ensure its the normal props\n            expectTypeOf().toEqualTypeOf();\n        });\n        it(\"defaults to second argument never if never\", () => {\n            expectTypeOf().toEqualTypeOf();\n            // ensure its the normal props\n            expectTypeOf().toEqualTypeOf();\n        });\n        it(\"defaults to second argument never if any\", () => {\n            expectTypeOf().branded.toEqualTypeOf();\n            // ensure its the normal props\n            expectTypeOf().toEqualTypeOf();\n        });\n        it(\"Cannot use $notStrict\", () => {\n            expectTypeOf().branded\n                // @ts-expect-error\n                .toEqualTypeOf();\n            // ensure its not the strict type\n            expectTypeOf().toEqualTypeOf();\n        });\n        it(\"defaults to last argument all props if never\", () => {\n            expectTypeOf().branded\n                .toEqualTypeOf();\n        });\n        it(\"defaults to last argument all props if any\", () => {\n            expectTypeOf().branded\n                .toEqualTypeOf();\n        });\n        it(\"defaults to last argument exactly if specified\", () => {\n            expectTypeOf().branded\n                .toEqualTypeOf();\n        });\n    });\n    describe(\"Osdk<>\", () => {\n        it(\"defaults to second argument never if omitted\", () => {\n            expectTypeOf().toEqualTypeOf();\n            // expect no rid\n            expectTypeOf().toEqualTypeOf();\n            // ensure its the normal props\n            expectTypeOf().toEqualTypeOf();\n        });\n        it(\"returns $rid if only thing specified\", () => {\n            expectTypeOf().toEqualTypeOf();\n            // expect rid\n            expectTypeOf().toEqualTypeOf();\n            // ensure its the normal props\n            expectTypeOf().toEqualTypeOf();\n        });\n        it(\"handles legacy properly: $rid and name\", () => {\n            expectTypeOf().toEqualTypeOf();\n            // expect rid\n            expectTypeOf().toEqualTypeOf();\n            // ensure its the strict type\n            expectTypeOf().toEqualTypeOf();\n        });\n        it(\"handles legacy properly: $rid and $all\", () => {\n            expectTypeOf().branded.toEqualTypeOf();\n            // expect rid\n            expectTypeOf().toEqualTypeOf();\n            // ensure its the normal props\n            expectTypeOf().toEqualTypeOf();\n        });\n        it(\"handles legacy properly: just $all\", () => {\n            expectTypeOf().branded.toEqualTypeOf();\n            // expect no rid\n            expectTypeOf().toEqualTypeOf();\n            // ensure its the normal props\n            expectTypeOf().toEqualTypeOf();\n        });\n        it(\"defaults to second argument never if never\", () => {\n            expectTypeOf().toEqualTypeOf();\n            // ensure its the normal props\n            expectTypeOf().toEqualTypeOf();\n            // expect no rid\n            expectTypeOf().toEqualTypeOf();\n        });\n        it(\"defaults to second argument never if any\", () => {\n            expectTypeOf().branded.toEqualTypeOf();\n            // ensure its the normal props\n            expectTypeOf().toEqualTypeOf();\n            // expect no rid\n            expectTypeOf().toEqualTypeOf();\n        });\n        it(\"Does not use $notStrict if requested with old type\", () => {\n            expectTypeOf().branded\n                .toEqualTypeOf();\n            // ensure its not the strict type\n            expectTypeOf().toEqualTypeOf();\n            // expect no rid\n            expectTypeOf().toEqualTypeOf();\n        });\n        it(\"defaults to last argument all props if never\", () => {\n            expectTypeOf().branded\n                .toEqualTypeOf();\n        });\n        it(\"defaults to last argument all props if any\", () => {\n            expectTypeOf().branded\n                .toEqualTypeOf();\n        });\n        it(\"defaults to last argument exactly if specified\", () => {\n            expectTypeOf()\n                .toEqualTypeOf();\n        });\n    });\n    describe(\"Inferred return types from fetchPage work\", () => {\n        function createObjectSetChannel(objectSet) {\n            return {};\n        }\n        class Helper {\n            objectSet;\n            constructor(objectSet) {\n                this.objectSet = objectSet;\n            }\n            go() {\n                return createObjectSetChannel(this.objectSet);\n            }\n        }\n        it(\"is not $notStrict\", async () => {\n            expectTypeOf().branded\n                .toEqualTypeOf();\n        });\n    });\n});\n"],"mappings":"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","ignoreList":[]}