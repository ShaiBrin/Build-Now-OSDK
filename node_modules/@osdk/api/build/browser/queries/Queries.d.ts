import type { DataValueClientToWire, DataValueWireToClient } from "../mapping/DataValueMapping.js";
import type { ObjectSet } from "../objectSet/ObjectSet.js";
import type { ObjectTypeDefinition } from "../ontology/ObjectTypeDefinition.js";
import type { OsdkBase } from "../OsdkBase.js";
import type { OsdkObjectPrimaryKeyType } from "../OsdkObjectPrimaryKeyType.js";
/**
 * Helper types for converting query definition parameter types to typescript types
 */
export declare namespace QueryParam {
    /**
     * Helper type to convert action definition parameter primitives to typescript types
     */
    type PrimitiveType<T extends keyof DataValueClientToWire> = DataValueClientToWire[T];
    /**
     * Helper type to convert action definition parameter object types to typescript types
     */
    type ObjectType<T extends ObjectTypeDefinition> = OsdkBase<T> | OsdkObjectPrimaryKeyType<T>;
    /**
     * Helper type to convert action definition parameter object sets to typescript types
     */
    type ObjectSetType<T extends ObjectTypeDefinition> = ObjectSet<T>;
}
/**
 * Helper types for converting query result types to typescript types
 */
export declare namespace QueryResult {
    /**
     * Helper type to convert action definition parameter primitives to typescript types
     */
    type PrimitiveType<T extends keyof DataValueClientToWire> = DataValueWireToClient[T];
    /**
     * Helper type to convert action definition parameter object types to typescript types
     */
    type ObjectType<T extends ObjectTypeDefinition> = OsdkBase<T>;
    /**
     * Helper type to convert action definition parameter object sets to typescript types
     */
    type ObjectSetType<T extends ObjectTypeDefinition> = ObjectSet<T>;
}
//# sourceMappingURL=Queries.d.ts.map