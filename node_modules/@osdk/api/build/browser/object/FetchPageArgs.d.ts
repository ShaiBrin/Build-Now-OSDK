import type { InterfaceDefinition } from "../ontology/InterfaceDefinition.js";
import type { ObjectOrInterfaceDefinition, PropertyKeys } from "../ontology/ObjectOrInterface.js";
import type { CompileTimeMetadata } from "../ontology/ObjectTypeDefinition.js";
export type NullabilityAdherence = false | "throw" | "drop";
export declare namespace NullabilityAdherence {
    type Default = "throw";
}
export interface SelectArg<Q extends ObjectOrInterfaceDefinition, L extends PropertyKeys<Q> = PropertyKeys<Q>, R extends boolean = false, S extends NullabilityAdherence = NullabilityAdherence.Default> {
    $select?: readonly L[];
    $includeRid?: R;
}
export interface OrderByArg<Q extends ObjectOrInterfaceDefinition, L extends PropertyKeys<Q> = PropertyKeys<Q>> {
    $orderBy?: {
        [K in L]?: "asc" | "desc";
    };
}
export type SelectArgToKeys<Q extends ObjectOrInterfaceDefinition, A extends SelectArg<Q, any, any>> = A extends SelectArg<Q, never> ? PropertyKeys<Q> : A["$select"] extends readonly string[] ? A["$select"][number] : PropertyKeys<Q>;
export interface FetchPageArgs<Q extends ObjectOrInterfaceDefinition, K extends PropertyKeys<Q> = PropertyKeys<Q>, R extends boolean = false, A extends Augments = {}, S extends NullabilityAdherence = NullabilityAdherence.Default> extends AsyncIterArgs<Q, K, R, A, S> {
    $nextPageToken?: string;
    $pageSize?: number;
}
export interface AsyncIterArgs<Q extends ObjectOrInterfaceDefinition, K extends PropertyKeys<Q> = PropertyKeys<Q>, R extends boolean = false, A extends Augments = {}, S extends NullabilityAdherence = NullabilityAdherence.Default> extends SelectArg<Q, K, R, S>, OrderByArg<Q, PropertyKeys<Q>> {
    $augment?: A;
    $__EXPERIMENTAL_selectedObjectTypes?: string[];
}
export type Augment<X extends ObjectOrInterfaceDefinition, T extends string> = {
    [K in CompileTimeMetadata<X>["apiName"]]: T[];
};
export type Augments = Record<string, string[]>;
export interface FetchInterfacePageArgs<Q extends InterfaceDefinition, K extends PropertyKeys<Q> = PropertyKeys<Q>, R extends boolean = false> extends SelectArg<Q, K, R>, OrderByArg<Q, PropertyKeys<Q>> {
    $nextPageToken?: string;
    $pageSize?: number;
    $augment?: Augments;
}
//# sourceMappingURL=FetchPageArgs.d.ts.map