{"version":3,"file":"TimeSeriesValueBankProperty.js","names":["foundryPlatformFetch","$foundryPlatformFetch","_getLatestValue","getLatestValue","$ctx","args","_streamValues","streamValues"],"sources":["TimeSeriesValueBankProperty.js"],"sourcesContent":["/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { foundryPlatformFetch as $foundryPlatformFetch } from \"@osdk/shared.net.platformapi\";\n//\nconst _getLatestValue = [0, \"/v2/ontologies/{0}/objects/{1}/{2}/timeseries/{3}/latestValue\", 2];\n/**\n * Get the latest value of a property backed by a timeseries. If a specific geotime series integration has both a history and a live integration, we will give precedence to the live integration.\n *\n * Third-party applications using this endpoint via OAuth2 must request the\n * following operation scopes: `api:read-data`.\n *\n * @alpha\n *\n * Required Scopes: [api:read-data]\n * URL: /v2/ontologies/{ontology}/objects/{objectType}/{primaryKey}/timeseries/{propertyName}/latestValue\n */\nexport function getLatestValue($ctx, ...args) {\n    return $foundryPlatformFetch($ctx, _getLatestValue, ...args);\n}\nconst _streamValues = [\n    1,\n    \"/v2/ontologies/{0}/objects/{1}/{2}/timeseries/{3}/streamValues\",\n    3,\n    ,\n    \"*/*\",\n];\n/**\n * Stream all of the points of a time series property (this includes geotime series references).\n *\n * Third-party applications using this endpoint via OAuth2 must request the\n * following operation scopes: `api:read-data`.\n *\n * @alpha\n *\n * Required Scopes: [api:read-data]\n * URL: /v2/ontologies/{ontology}/objects/{objectType}/{primaryKey}/timeseries/{property}/streamValues\n */\nexport function streamValues($ctx, ...args) {\n    return $foundryPlatformFetch($ctx, _streamValues, ...args);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,oBAAoB,IAAIC,qBAAqB,QAAQ,8BAA8B;AAC5F;AACA,MAAMC,eAAe,GAAG,CAAC,CAAC,EAAE,+DAA+D,EAAE,CAAC,CAAC;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAACC,IAAI,EAAE,GAAGC,IAAI,EAAE;EAC1C,OAAOJ,qBAAqB,CAACG,IAAI,EAAEF,eAAe,EAAE,GAAGG,IAAI,CAAC;AAChE;AACA,MAAMC,aAAa,GAAG,CAClB,CAAC,EACD,gEAAgE,EAChE,CAAC,GAED,KAAK,CACR;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,YAAYA,CAACH,IAAI,EAAE,GAAGC,IAAI,EAAE;EACxC,OAAOJ,qBAAqB,CAACG,IAAI,EAAEE,aAAa,EAAE,GAAGD,IAAI,CAAC;AAC9D","ignoreList":[]}