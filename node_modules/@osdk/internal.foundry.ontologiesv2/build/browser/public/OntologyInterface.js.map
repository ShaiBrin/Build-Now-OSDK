{"version":3,"file":"OntologyInterface.js","names":["foundryPlatformFetch","$foundryPlatformFetch","_list","list","$ctx","args","_get","get","_search","search","_aggregate","aggregate"],"sources":["OntologyInterface.js"],"sourcesContent":["/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { foundryPlatformFetch as $foundryPlatformFetch } from \"@osdk/shared.net.platformapi\";\n//\nconst _list = [0, \"/v2/ontologies/{0}/interfaceTypes\", 2];\n/**\n * :::callout{theme=warning title=Warning}\n * This endpoint is in preview and may be modified or removed at any time.\n * To use this endpoint, add `preview=true` to the request query parameters.\n * :::\n *\n * Lists the interface types for the given Ontology.\n *\n * Each page may be smaller than the requested page size. However, it is guaranteed that if there are more\n * results available, at least one result will be present in the response.\n *\n * Third-party applications using this endpoint via OAuth2 must request the following operation scope: `api:ontologies-read`.\n *\n * @alpha\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/{ontology}/interfaceTypes\n */\nexport function list($ctx, ...args) {\n    return $foundryPlatformFetch($ctx, _list, ...args);\n}\nconst _get = [0, \"/v2/ontologies/{0}/interfaceTypes/{1}\", 2];\n/**\n * :::callout{theme=warning title=Warning}\n * This endpoint is in preview and may be modified or removed at any time.\n * To use this endpoint, add `preview=true` to the request query parameters.\n * :::\n *\n * Gets a specific object type with the given API name.\n *\n * Third-party applications using this endpoint via OAuth2 must request the following operation scope: `api:ontologies-read`.\n *\n * @alpha\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/{ontology}/interfaceTypes/{interfaceType}\n */\nexport function get($ctx, ...args) {\n    return $foundryPlatformFetch($ctx, _get, ...args);\n}\nconst _search = [1, \"/v2/ontologies/{0}/interfaces/{1}/search\", 3];\n/**\n * :::callout{theme=warning title=Warning}\n * This endpoint will be removed once TS OSDK is updated to use `objectSets/loadObjects` with interface object\n * sets.\n * :::\n * :::callout{theme=warning title=Warning}\n * This endpoint is in preview and may be modified or removed at any time.\n * To use this endpoint, add `preview=true` to the request query parameters.\n * :::\n *\n * Search for objects in the specified ontology and interface type. Any properties specified in the \"where\" or\n * \"orderBy\" parameters must be shared property type API names defined on the interface. The following search\n * queries are supported:\n *\n * | Query type                              | Description                                                                                                       | Supported Types                 |\n * |-----------------------------------------|-------------------------------------------------------------------------------------------------------------------|---------------------------------|\n * | lt                                      | The provided property is less than the provided value.                                                            | number, string, date, timestamp |\n * | gt                                      | The provided property is greater than the provided value.                                                         | number, string, date, timestamp |\n * | lte                                     | The provided property is less than or equal to the provided value.                                                | number, string, date, timestamp |\n * | gte                                     | The provided property is greater than or equal to the provided value.                                             | number, string, date, timestamp |\n * | eq                                      | The provided property is exactly equal to the provided value.                                                     | number, string, date, timestamp |\n * | isNull                                  | The provided property is (or is not) null.                                                                        | all                             |\n * | contains                                | The provided property contains the provided value.                                                                | array                           |\n * | not                                     | The sub-query does not match.                                                                                     | N/A (applied on a query)        |\n * | and                                     | All the sub-queries match.                                                                                        | N/A (applied on queries)        |\n * | or                                      | At least one of the sub-queries match.                                                                            | N/A (applied on queries)        |\n * | startsWith                              | The provided property starts with the provided value.                                                             | string                          |\n * | containsAllTermsInOrderPrefixLastTerm   | The provided property contains all the terms provided in order. The last term can be a partial prefix match.      | string                          |\n * | containsAllTermsInOrder                 | The provided property contains the provided value as a substring.                                                 | string                          |\n * | containsAnyTerm                         | The provided property contains at least one of the terms separated by whitespace.                                 | string                          |\n * | containsAllTerms                        | The provided property contains all the terms separated by whitespace.                                             | string                          |\n *\n * Attempting to use an unsupported query will result in a validation error. Third-party applications using this\n * endpoint via OAuth2 must request the following operation scope: `api:ontologies-read`.\n *\n * @alpha\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/{ontology}/interfaces/{interfaceType}/search\n */\nexport function search($ctx, ...args) {\n    return $foundryPlatformFetch($ctx, _search, ...args);\n}\nconst _aggregate = [1, \"/v2/ontologies/{0}/interfaces/{1}/aggregate\", 3];\n/**\n * :::callout{theme=warning title=Warning}\n * This endpoint will be removed once TS OSDK is updated to use `objectSets/aggregate` with interface object\n * sets.\n * :::\n * :::callout{theme=warning title=Warning}\n * This endpoint is in preview and may be modified or removed at any time.\n * To use this endpoint, add `preview=true` to the request query parameters.\n * :::\n *\n * Perform functions on object fields in the specified ontology and of the specified interface type. Any\n * properties specified in the query must be shared property type API names defined on the interface.\n *\n * Third-party applications using this endpoint via OAuth2 must request the following operation scope: `api:ontologies-read`.\n *\n * @alpha\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/{ontology}/interfaces/{interfaceType}/aggregate\n */\nexport function aggregate($ctx, ...args) {\n    return $foundryPlatformFetch($ctx, _aggregate, ...args);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,oBAAoB,IAAIC,qBAAqB,QAAQ,8BAA8B;AAC5F;AACA,MAAMC,KAAK,GAAG,CAAC,CAAC,EAAE,mCAAmC,EAAE,CAAC,CAAC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,IAAIA,CAACC,IAAI,EAAE,GAAGC,IAAI,EAAE;EAChC,OAAOJ,qBAAqB,CAACG,IAAI,EAAEF,KAAK,EAAE,GAAGG,IAAI,CAAC;AACtD;AACA,MAAMC,IAAI,GAAG,CAAC,CAAC,EAAE,uCAAuC,EAAE,CAAC,CAAC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,GAAGA,CAACH,IAAI,EAAE,GAAGC,IAAI,EAAE;EAC/B,OAAOJ,qBAAqB,CAACG,IAAI,EAAEE,IAAI,EAAE,GAAGD,IAAI,CAAC;AACrD;AACA,MAAMG,OAAO,GAAG,CAAC,CAAC,EAAE,0CAA0C,EAAE,CAAC,CAAC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,MAAMA,CAACL,IAAI,EAAE,GAAGC,IAAI,EAAE;EAClC,OAAOJ,qBAAqB,CAACG,IAAI,EAAEI,OAAO,EAAE,GAAGH,IAAI,CAAC;AACxD;AACA,MAAMK,UAAU,GAAG,CAAC,CAAC,EAAE,6CAA6C,EAAE,CAAC,CAAC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,SAASA,CAACP,IAAI,EAAE,GAAGC,IAAI,EAAE;EACrC,OAAOJ,qBAAqB,CAACG,IAAI,EAAEM,UAAU,EAAE,GAAGL,IAAI,CAAC;AAC3D","ignoreList":[]}