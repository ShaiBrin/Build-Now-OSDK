{"version":3,"file":"OntologyObjectV2.js","names":["foundryPlatformFetch","$foundryPlatformFetch","_list","list","$ctx","args","_get","get","_count","count","_search","search","_aggregate","aggregate"],"sources":["OntologyObjectV2.js"],"sourcesContent":["/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { foundryPlatformFetch as $foundryPlatformFetch } from \"@osdk/shared.net.platformapi\";\n//\nconst _list = [0, \"/v2/ontologies/{0}/objects/{1}\", 2];\n/**\n * Lists the objects for the given Ontology and object type.\n *\n * Note that this endpoint does not guarantee consistency. Changes to the data could result in missing or\n * repeated objects in the response pages.\n *\n * For Object Storage V1 backed objects, this endpoint returns a maximum of 10,000 objects. After 10,000 objects have been returned and if more objects\n * are available, attempting to load another page will result in an `ObjectsExceededLimit` error being returned. There is no limit on Object Storage V2 backed objects.\n *\n * Each page may be smaller or larger than the requested page size. However, it\n * is guaranteed that if there are more results available, at least one result will be present\n * in the response.\n *\n * Note that null value properties will not be returned.\n *\n * Third-party applications using this endpoint via OAuth2 must request the following operation scope: `api:ontologies-read`.\n *\n * @public\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/{ontology}/objects/{objectType}\n */\nexport function list($ctx, ...args) {\n    return $foundryPlatformFetch($ctx, _list, ...args);\n}\nconst _get = [0, \"/v2/ontologies/{0}/objects/{1}/{2}\", 2];\n/**\n * Gets a specific object with the given primary key.\n *\n * Third-party applications using this endpoint via OAuth2 must request the following operation scope: `api:ontologies-read`.\n *\n * @public\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/{ontology}/objects/{objectType}/{primaryKey}\n */\nexport function get($ctx, ...args) {\n    return $foundryPlatformFetch($ctx, _get, ...args);\n}\nconst _count = [1, \"/v2/ontologies/{0}/objects/{1}/count\", 2];\n/**\n * Returns a count of the objects of the given object type.\n *\n * Third-party applications using this endpoint via OAuth2 must request the following operation scope: `api:ontologies-read`.\n *\n * @alpha\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/{ontology}/objects/{objectType}/count\n */\nexport function count($ctx, ...args) {\n    return $foundryPlatformFetch($ctx, _count, ...args);\n}\nconst _search = [1, \"/v2/ontologies/{0}/objects/{1}/search\", 3];\n/**\n * Search for objects in the specified ontology and object type. The request body is used\n * to filter objects based on the specified query. The supported queries are:\n *\n * | Query type                              | Description                                                                                                       | Supported Types                 |\n * |-----------------------------------------|-------------------------------------------------------------------------------------------------------------------|---------------------------------|\n * | lt                                      | The provided property is less than the provided value.                                                            | number, string, date, timestamp |\n * | gt                                      | The provided property is greater than the provided value.                                                         | number, string, date, timestamp |\n * | lte                                     | The provided property is less than or equal to the provided value.                                                | number, string, date, timestamp |\n * | gte                                     | The provided property is greater than or equal to the provided value.                                             | number, string, date, timestamp |\n * | eq                                      | The provided property is exactly equal to the provided value.                                                     | number, string, date, timestamp |\n * | isNull                                  | The provided property is (or is not) null.                                                                        | all                             |\n * | contains                                | The provided property contains the provided value.                                                                | array                           |\n * | not                                     | The sub-query does not match.                                                                                     | N/A (applied on a query)        |\n * | and                                     | All the sub-queries match.                                                                                        | N/A (applied on queries)        |\n * | or                                      | At least one of the sub-queries match.                                                                            | N/A (applied on queries)        |\n * | startsWith                              | The provided property starts with the provided value.                                                             | string                          |\n * | containsAllTermsInOrderPrefixLastTerm   | The provided property contains all the terms provided in order. The last term can be a partial prefix match.      | string                          |\n * | containsAllTermsInOrder                 | The provided property contains the provided value as a substring.                                                 | string                          |\n * | containsAnyTerm                         | The provided property contains at least one of the terms separated by whitespace.                                 | string                          |\n * | containsAllTerms                        | The provided property contains all the terms separated by whitespace.                                             | string                          |\n *\n * Third-party applications using this endpoint via OAuth2 must request the following operation scope: `api:ontologies-read`.\n *\n * @public\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/{ontology}/objects/{objectType}/search\n */\nexport function search($ctx, ...args) {\n    return $foundryPlatformFetch($ctx, _search, ...args);\n}\nconst _aggregate = [1, \"/v2/ontologies/{0}/objects/{1}/aggregate\", 3];\n/**\n * Perform functions on object fields in the specified ontology and object type.\n *\n * Third-party applications using this endpoint via OAuth2 must request the following operation scope: `api:ontologies-read`.\n *\n * @public\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/{ontology}/objects/{objectType}/aggregate\n */\nexport function aggregate($ctx, ...args) {\n    return $foundryPlatformFetch($ctx, _aggregate, ...args);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,oBAAoB,IAAIC,qBAAqB,QAAQ,8BAA8B;AAC5F;AACA,MAAMC,KAAK,GAAG,CAAC,CAAC,EAAE,gCAAgC,EAAE,CAAC,CAAC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,IAAIA,CAACC,IAAI,EAAE,GAAGC,IAAI,EAAE;EAChC,OAAOJ,qBAAqB,CAACG,IAAI,EAAEF,KAAK,EAAE,GAAGG,IAAI,CAAC;AACtD;AACA,MAAMC,IAAI,GAAG,CAAC,CAAC,EAAE,oCAAoC,EAAE,CAAC,CAAC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,GAAGA,CAACH,IAAI,EAAE,GAAGC,IAAI,EAAE;EAC/B,OAAOJ,qBAAqB,CAACG,IAAI,EAAEE,IAAI,EAAE,GAAGD,IAAI,CAAC;AACrD;AACA,MAAMG,MAAM,GAAG,CAAC,CAAC,EAAE,sCAAsC,EAAE,CAAC,CAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,KAAKA,CAACL,IAAI,EAAE,GAAGC,IAAI,EAAE;EACjC,OAAOJ,qBAAqB,CAACG,IAAI,EAAEI,MAAM,EAAE,GAAGH,IAAI,CAAC;AACvD;AACA,MAAMK,OAAO,GAAG,CAAC,CAAC,EAAE,uCAAuC,EAAE,CAAC,CAAC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,MAAMA,CAACP,IAAI,EAAE,GAAGC,IAAI,EAAE;EAClC,OAAOJ,qBAAqB,CAACG,IAAI,EAAEM,OAAO,EAAE,GAAGL,IAAI,CAAC;AACxD;AACA,MAAMO,UAAU,GAAG,CAAC,CAAC,EAAE,0CAA0C,EAAE,CAAC,CAAC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,SAASA,CAACT,IAAI,EAAE,GAAGC,IAAI,EAAE;EACrC,OAAOJ,qBAAqB,CAACG,IAAI,EAAEQ,UAAU,EAAE,GAAGP,IAAI,CAAC;AAC3D","ignoreList":[]}