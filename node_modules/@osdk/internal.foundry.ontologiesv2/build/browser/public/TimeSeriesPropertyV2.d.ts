import type * as _Core from "@osdk/internal.foundry.core";
import type { SharedClient as $OldClient, SharedClientContext as $OldClientContext } from "@osdk/shared.client";
import type { SharedClient as $Client, SharedClientContext as $ClientContext } from "@osdk/shared.client2";
/**
 * Get the first point of a time series property.
 *
 * Third-party applications using this endpoint via OAuth2 must request the
 * following operation scopes: `api:ontologies-read`.
 *
 * @public
 *
 * Required Scopes: [api:ontologies-read]
 * URL: /v2/ontologies/{ontology}/objects/{objectType}/{primaryKey}/timeseries/{property}/firstPoint
 */
export declare function getFirstPoint($ctx: $Client | $ClientContext | $OldClient | $OldClientContext, ...args: [
    ontology: _Core.OntologyIdentifier,
    objectType: _Core.ObjectTypeApiName,
    primaryKey: _Core.PropertyValueEscapedString,
    property: _Core.PropertyApiName,
    $queryParams?: {
        artifactRepository?: _Core.ArtifactRepositoryRid | undefined;
        packageName?: _Core.SdkPackageName | undefined;
    }
]): Promise<_Core.TimeSeriesPoint | undefined>;
/**
 * Get the last point of a time series property.
 *
 * Third-party applications using this endpoint via OAuth2 must request the
 * following operation scopes: `api:ontologies-read`.
 *
 * @public
 *
 * Required Scopes: [api:ontologies-read]
 * URL: /v2/ontologies/{ontology}/objects/{objectType}/{primaryKey}/timeseries/{property}/lastPoint
 */
export declare function getLastPoint($ctx: $Client | $ClientContext | $OldClient | $OldClientContext, ...args: [
    ontology: _Core.OntologyIdentifier,
    objectType: _Core.ObjectTypeApiName,
    primaryKey: _Core.PropertyValueEscapedString,
    property: _Core.PropertyApiName,
    $queryParams?: {
        artifactRepository?: _Core.ArtifactRepositoryRid | undefined;
        packageName?: _Core.SdkPackageName | undefined;
    }
]): Promise<_Core.TimeSeriesPoint | undefined>;
/**
 * Stream all of the points of a time series property.
 *
 * Third-party applications using this endpoint via OAuth2 must request the
 * following operation scopes: `api:ontologies-read`.
 *
 * @public
 *
 * Required Scopes: [api:ontologies-read]
 * URL: /v2/ontologies/{ontology}/objects/{objectType}/{primaryKey}/timeseries/{property}/streamPoints
 */
export declare function streamPoints($ctx: $Client | $ClientContext | $OldClient | $OldClientContext, ...args: [
    ontology: _Core.OntologyIdentifier,
    objectType: _Core.ObjectTypeApiName,
    primaryKey: _Core.PropertyValueEscapedString,
    property: _Core.PropertyApiName,
    $body: _Core.StreamTimeSeriesPointsRequest,
    $queryParams?: {
        artifactRepository?: _Core.ArtifactRepositoryRid | undefined;
        packageName?: _Core.SdkPackageName | undefined;
    }
]): Promise<Blob>;
//# sourceMappingURL=TimeSeriesPropertyV2.d.ts.map