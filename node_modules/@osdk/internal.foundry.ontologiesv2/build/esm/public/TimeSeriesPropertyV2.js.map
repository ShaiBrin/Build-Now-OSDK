{"version":3,"file":"TimeSeriesPropertyV2.js","names":["foundryPlatformFetch","$foundryPlatformFetch","_getFirstPoint","getFirstPoint","$ctx","args","_getLastPoint","getLastPoint","_streamPoints","streamPoints"],"sources":["TimeSeriesPropertyV2.js"],"sourcesContent":["/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { foundryPlatformFetch as $foundryPlatformFetch } from \"@osdk/shared.net.platformapi\";\n//\nconst _getFirstPoint = [0, \"/v2/ontologies/{0}/objects/{1}/{2}/timeseries/{3}/firstPoint\", 2];\n/**\n * Get the first point of a time series property.\n *\n * Third-party applications using this endpoint via OAuth2 must request the\n * following operation scopes: `api:ontologies-read`.\n *\n * @public\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/{ontology}/objects/{objectType}/{primaryKey}/timeseries/{property}/firstPoint\n */\nexport function getFirstPoint($ctx, ...args) {\n    return $foundryPlatformFetch($ctx, _getFirstPoint, ...args);\n}\nconst _getLastPoint = [0, \"/v2/ontologies/{0}/objects/{1}/{2}/timeseries/{3}/lastPoint\", 2];\n/**\n * Get the last point of a time series property.\n *\n * Third-party applications using this endpoint via OAuth2 must request the\n * following operation scopes: `api:ontologies-read`.\n *\n * @public\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/{ontology}/objects/{objectType}/{primaryKey}/timeseries/{property}/lastPoint\n */\nexport function getLastPoint($ctx, ...args) {\n    return $foundryPlatformFetch($ctx, _getLastPoint, ...args);\n}\nconst _streamPoints = [\n    1,\n    \"/v2/ontologies/{0}/objects/{1}/{2}/timeseries/{3}/streamPoints\",\n    3,\n    ,\n    \"*/*\",\n];\n/**\n * Stream all of the points of a time series property.\n *\n * Third-party applications using this endpoint via OAuth2 must request the\n * following operation scopes: `api:ontologies-read`.\n *\n * @public\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/{ontology}/objects/{objectType}/{primaryKey}/timeseries/{property}/streamPoints\n */\nexport function streamPoints($ctx, ...args) {\n    return $foundryPlatformFetch($ctx, _streamPoints, ...args);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,oBAAoB,IAAIC,qBAAqB,QAAQ,8BAA8B;AAC5F;AACA,MAAMC,cAAc,GAAG,CAAC,CAAC,EAAE,8DAA8D,EAAE,CAAC,CAAC;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,aAAaA,CAACC,IAAI,EAAE,GAAGC,IAAI,EAAE;EACzC,OAAOJ,qBAAqB,CAACG,IAAI,EAAEF,cAAc,EAAE,GAAGG,IAAI,CAAC;AAC/D;AACA,MAAMC,aAAa,GAAG,CAAC,CAAC,EAAE,6DAA6D,EAAE,CAAC,CAAC;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,YAAYA,CAACH,IAAI,EAAE,GAAGC,IAAI,EAAE;EACxC,OAAOJ,qBAAqB,CAACG,IAAI,EAAEE,aAAa,EAAE,GAAGD,IAAI,CAAC;AAC9D;AACA,MAAMG,aAAa,GAAG,CAClB,CAAC,EACD,gEAAgE,EAChE,CAAC,GAED,KAAK,CACR;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,YAAYA,CAACL,IAAI,EAAE,GAAGC,IAAI,EAAE;EACxC,OAAOJ,qBAAqB,CAACG,IAAI,EAAEI,aAAa,EAAE,GAAGH,IAAI,CAAC;AAC9D","ignoreList":[]}