import type * as _Core from "@osdk/internal.foundry.core";
import type { SharedClient as $OldClient, SharedClientContext as $OldClientContext } from "@osdk/shared.client";
import type { SharedClient as $Client, SharedClientContext as $ClientContext } from "@osdk/shared.client2";
/**
 * Get the metadata of attachments parented to the given object.
 *
 * Third-party applications using this endpoint via OAuth2 must request the
 * following operation scopes: `api:ontologies-read`.
 *
 * @public
 *
 * Required Scopes: [api:ontologies-read]
 * URL: /v2/ontologies/{ontology}/objects/{objectType}/{primaryKey}/attachments/{property}
 */
export declare function getAttachment($ctx: $Client | $ClientContext | $OldClient | $OldClientContext, ...args: [
    ontology: _Core.OntologyIdentifier,
    objectType: _Core.ObjectTypeApiName,
    primaryKey: _Core.PropertyValueEscapedString,
    property: _Core.PropertyApiName,
    $queryParams?: {
        artifactRepository?: _Core.ArtifactRepositoryRid | undefined;
        packageName?: _Core.SdkPackageName | undefined;
    }
]): Promise<_Core.AttachmentMetadataResponse>;
/**
 * Get the metadata of a particular attachment in an attachment list.
 *
 * Third-party applications using this endpoint via OAuth2 must request the
 * following operation scopes: `api:ontologies-read`.
 *
 * @public
 *
 * Required Scopes: [api:ontologies-read]
 * URL: /v2/ontologies/{ontology}/objects/{objectType}/{primaryKey}/attachments/{property}/{attachmentRid}
 */
export declare function getAttachmentByRid($ctx: $Client | $ClientContext | $OldClient | $OldClientContext, ...args: [
    ontology: _Core.OntologyIdentifier,
    objectType: _Core.ObjectTypeApiName,
    primaryKey: _Core.PropertyValueEscapedString,
    property: _Core.PropertyApiName,
    attachmentRid: _Core.AttachmentRid,
    $queryParams?: {
        artifactRepository?: _Core.ArtifactRepositoryRid | undefined;
        packageName?: _Core.SdkPackageName | undefined;
    }
]): Promise<_Core.AttachmentV2>;
/**
 * Get the content of an attachment.
 *
 * Third-party applications using this endpoint via OAuth2 must request the
 * following operation scopes: `api:ontologies-read`.
 *
 * @public
 *
 * Required Scopes: [api:ontologies-read]
 * URL: /v2/ontologies/{ontology}/objects/{objectType}/{primaryKey}/attachments/{property}/content
 */
export declare function readAttachment($ctx: $Client | $ClientContext | $OldClient | $OldClientContext, ...args: [
    ontology: _Core.OntologyIdentifier,
    objectType: _Core.ObjectTypeApiName,
    primaryKey: _Core.PropertyValueEscapedString,
    property: _Core.PropertyApiName,
    $queryParams?: {
        artifactRepository?: _Core.ArtifactRepositoryRid | undefined;
        packageName?: _Core.SdkPackageName | undefined;
    }
]): Promise<Blob>;
/**
 * Get the content of an attachment by its RID.
 *
 * The RID must exist in the attachment array of the property.
 *
 * Third-party applications using this endpoint via OAuth2 must request the
 * following operation scopes: `api:ontologies-read`.
 *
 * @public
 *
 * Required Scopes: [api:ontologies-read]
 * URL: /v2/ontologies/{ontology}/objects/{objectType}/{primaryKey}/attachments/{property}/{attachmentRid}/content
 */
export declare function readAttachmentByRid($ctx: $Client | $ClientContext | $OldClient | $OldClientContext, ...args: [
    ontology: _Core.OntologyIdentifier,
    objectType: _Core.ObjectTypeApiName,
    primaryKey: _Core.PropertyValueEscapedString,
    property: _Core.PropertyApiName,
    attachmentRid: _Core.AttachmentRid,
    $queryParams?: {
        artifactRepository?: _Core.ArtifactRepositoryRid | undefined;
        packageName?: _Core.SdkPackageName | undefined;
    }
]): Promise<Blob>;
//# sourceMappingURL=AttachmentPropertyV2.d.ts.map