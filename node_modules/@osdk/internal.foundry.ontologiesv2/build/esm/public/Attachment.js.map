{"version":3,"file":"Attachment.js","names":["foundryPlatformFetch","$foundryPlatformFetch","_upload","upload","$ctx","args","headerParams","type","size","toString","_read","read","_get","get"],"sources":["Attachment.js"],"sourcesContent":["/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { foundryPlatformFetch as $foundryPlatformFetch } from \"@osdk/shared.net.platformapi\";\n//\nconst _upload = [1, \"/v2/ontologies/attachments/upload\", 7, \"*/*\"];\n/**\n * Upload an attachment to use in an action. Any attachment which has not been linked to an object via\n * an action within one hour after upload will be removed.\n * Previously mapped attachments which are not connected to any object anymore are also removed on\n * a biweekly basis.\n * The body of the request must contain the binary content of the file and the `Content-Type` header must be `application/octet-stream`.\n *\n * Third-party applications using this endpoint via OAuth2 must request the\n * following operation scopes: `api:ontologies-write`.\n *\n * @public\n *\n * Required Scopes: [api:ontologies-write]\n * URL: /v2/ontologies/attachments/upload\n */\nexport function upload($ctx, ...args) {\n    const headerParams = {\n        ...args[2],\n        \"Content-Type\": args[2]?.[\"Content-Type\"] ?? args[0].type,\n        \"Content-Length\": args[0].size.toString(),\n    };\n    return $foundryPlatformFetch($ctx, _upload, args[0], args[1], headerParams);\n}\nconst _read = [0, \"/v2/ontologies/attachments/{0}/content\", , , \"*/*\"];\n/**\n * Get the content of an attachment.\n *\n * Third-party applications using this endpoint via OAuth2 must request the\n * following operation scopes: `api:ontologies-read`.\n *\n * @public\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/attachments/{attachmentRid}/content\n */\nexport function read($ctx, ...args) {\n    return $foundryPlatformFetch($ctx, _read, ...args);\n}\nconst _get = [0, \"/v2/ontologies/attachments/{0}\"];\n/**\n * Get the metadata of an attachment.\n *\n * Third-party applications using this endpoint via OAuth2 must request the\n * following operation scopes: `api:ontologies-read`.\n *\n * @public\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/attachments/{attachmentRid}\n */\nexport function get($ctx, ...args) {\n    return $foundryPlatformFetch($ctx, _get, ...args);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,oBAAoB,IAAIC,qBAAqB,QAAQ,8BAA8B;AAC5F;AACA,MAAMC,OAAO,GAAG,CAAC,CAAC,EAAE,mCAAmC,EAAE,CAAC,EAAE,KAAK,CAAC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,MAAMA,CAACC,IAAI,EAAE,GAAGC,IAAI,EAAE;EAClC,MAAMC,YAAY,GAAG;IACjB,GAAGD,IAAI,CAAC,CAAC,CAAC;IACV,cAAc,EAAEA,IAAI,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC,CAACE,IAAI;IACzD,gBAAgB,EAAEF,IAAI,CAAC,CAAC,CAAC,CAACG,IAAI,CAACC,QAAQ,CAAC;EAC5C,CAAC;EACD,OAAOR,qBAAqB,CAACG,IAAI,EAAEF,OAAO,EAAEG,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,EAAEC,YAAY,CAAC;AAC/E;AACA,MAAMI,KAAK,GAAG,CAAC,CAAC,EAAE,wCAAwC,IAAM,KAAK,CAAC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,IAAIA,CAACP,IAAI,EAAE,GAAGC,IAAI,EAAE;EAChC,OAAOJ,qBAAqB,CAACG,IAAI,EAAEM,KAAK,EAAE,GAAGL,IAAI,CAAC;AACtD;AACA,MAAMO,IAAI,GAAG,CAAC,CAAC,EAAE,gCAAgC,CAAC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,GAAGA,CAACT,IAAI,EAAE,GAAGC,IAAI,EAAE;EAC/B,OAAOJ,qBAAqB,CAACG,IAAI,EAAEQ,IAAI,EAAE,GAAGP,IAAI,CAAC;AACrD","ignoreList":[]}