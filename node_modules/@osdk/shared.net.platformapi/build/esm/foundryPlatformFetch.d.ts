import type { SharedClient as OldSharedClient, SharedClientContext as OldSharedClientContext } from "@osdk/shared.client";
import type { SharedClient, SharedClientContext } from "@osdk/shared.client2";
export type FoundryPlatformMethod<F extends (...args: any[]) => any> = [
    method: number,
    path: string,
    flags?: number,
    contentType?: string,
    responseContentType?: string
] & {
    __funcBrand?: F;
};
export declare function foundryPlatformFetch<X extends FoundryPlatformMethod<any>>(client: SharedClient | SharedClientContext | OldSharedClient | OldSharedClientContext, [httpMethodNum, origPath, flags, contentType, responseContentType,]: X, ...args: Parameters<NonNullable<X["__funcBrand"]>>): Promise<Awaited<ReturnType<NonNullable<X["__funcBrand"]>>>>;
//# sourceMappingURL=foundryPlatformFetch.d.ts.map